<UserControl x:Class="MyDX_Demo.Module.MVVM_Demo.Behaviors.DependencyPropertyBehaviorView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:local="clr-namespace:MyDX_Demo.Module.MVVM_Demo.Behaviors"
             xmlns:dxmvvm="http://schemas.devexpress.com/winfx/2008/xaml/mvvm"
             xmlns:dxlc="http://schemas.devexpress.com/winfx/2008/xaml/layoutcontrol"
             DataContext="{dxmvvm:ViewModelSource Type=local:DependencyPropertyBehaviorViewModel}"
             mc:Ignorable="d" 
             d:DesignHeight="450" d:DesignWidth="800">
    <dxlc:LayoutControl Orientation="Vertical" VerticalAlignment="Top">
        <TextBlock TextWrapping="Wrap" VerticalAlignment="Top"><Bold>DependencyPropertyBehavior</Bold> allows you to apply binding to properties that are not DependencyProperties. For example, <Bold>TextBox.SelectedText</Bold>.</TextBlock>
        <TextBox Text="Select some text in this box" VerticalAlignment="Top">
            <dxmvvm:Interaction.Behaviors>
                <dxmvvm:DependencyPropertyBehavior PropertyName="SelectedText" EventName="SelectionChanged" Binding="{Binding SelectedText, Mode=TwoWay}"/>
            </dxmvvm:Interaction.Behaviors>
        </TextBox>
        <Button Command="{Binding ShowSelectedTextCommand}" Focusable="False" VerticalAlignment="Top">Show Selected Text</Button>
    </dxlc:LayoutControl>
</UserControl>
