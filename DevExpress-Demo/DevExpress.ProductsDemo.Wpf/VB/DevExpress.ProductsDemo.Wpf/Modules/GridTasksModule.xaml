<UserControl
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:local="clr-namespace:ProductsDemo.Modules"
        xmlns:dxe="http://schemas.devexpress.com/winfx/2008/xaml/editors"
        xmlns:dxg="http://schemas.devexpress.com/winfx/2008/xaml/grid"
        xmlns:dxb="http://schemas.devexpress.com/winfx/2008/xaml/bars"
        xmlns:dxr="http://schemas.devexpress.com/winfx/2008/xaml/ribbon"
        xmlns:dxmvvm="http://schemas.devexpress.com/winfx/2008/xaml/mvvm"
        xmlns:dx="http://schemas.devexpress.com/winfx/2008/xaml/core"
        xmlns:dxdo="http://schemas.devexpress.com/winfx/2008/xaml/docking"
        mc:Ignorable="d"
        x:Class="ProductsDemo.Modules.GridTasksModule"
        d:DesignHeight="643" d:DesignWidth="1101"
        DataContext="{dxmvvm:ViewModelSource Type=local:GridTasksModuleViewModel}"
        dx:ScrollBarExtensions.ScrollBarMode="TouchOverlap">

    <UserControl.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="/DevExpress.ProductsDemo.Wpf;component/ModulesResources/GridTemplates.xaml" />
            </ResourceDictionary.MergedDictionaries>
            <local:ItemTypeToBooleanConverter x:Key="itemTypeToBooleanConverter"/>

            <dxg:TableView x:Key="view" ShowSearchPanelMode="Always" AllowPerPixelScrolling="True" CellValueChanging="TableView_CellValueChanging" ShowGroupPanel="False" AutoWidth="True" AllowConditionalFormattingMenu="True">
                <dxg:TableView.FormatConditions>
                    <dxg:FormatCondition Expression="[Overdue]" PredefinedFormatName="RedText"/>
                    <dxg:FormatCondition Expression="(Not [Complete]) And ([Priority]='High')" PredefinedFormatName="BoldText"/>
                    <dxg:FormatCondition Expression="([Status]='Completed') Or ([Status]='Deferred')">
                        <dx:Format Foreground="Gray"/>
                    </dxg:FormatCondition>
                    <dxg:FormatCondition Expression="[Status]='WaitingOnSomeoneElse'">
                        <dx:Format Foreground="Orange"/>
                    </dxg:FormatCondition>
                    <dxg:FormatCondition PredefinedFormatName="StrikethroughText" Expression="[Status]='Completed'"/>
                </dxg:TableView.FormatConditions>
                <dxmvvm:Interaction.Triggers>
                    <dxmvvm:EventToCommand EventName="RowDoubleClick" Command="{Binding ShowEditTaskWindowCommand}"/>
                </dxmvvm:Interaction.Triggers>
            </dxg:TableView>
            <Style x:Key="gridControlMVVMStyle" TargetType="{x:Type dxg:GridControl}">
                <Setter Property="ItemsSource" Value="{Binding ItemsSource}"/>
                <Setter Property="ColumnsSource" Value="{Binding Columns}"/>
                <Setter Property="AutoExpandAllGroups" Value="True"/>
                <Setter Property="SelectedItem" Value="{Binding SelectedItem, Mode=TwoWay}"/>
                <Setter Property="FilterString" Value="{Binding FilterString, Mode=TwoWay}"/>
            </Style>
            <dxg:GridControl x:Key="printGridControl" ColumnGeneratorStyle="{StaticResource columnGeneratorStyle}">
                <dxg:GridControl.View>
                    <dxg:TableView AutoWidth="True"/>
                </dxg:GridControl.View>
                <dxg:GridControl.GroupSummary>
                    <dxg:GridSummaryItem SummaryType="Count"/>
                </dxg:GridControl.GroupSummary>
            </dxg:GridControl>
        </ResourceDictionary>
    </UserControl.Resources>
    <dxmvvm:Interaction.Behaviors>
        <dxmvvm:NotificationService UseWin8NotificationsIfAvailable="False"
                                PredefinedNotificationTemplate="ShortHeaderAndLongText"/>
    </dxmvvm:Interaction.Behaviors>
    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="*"/>
        </Grid.RowDefinitions>
        <dxr:RibbonControl DockPanel.Dock="Top" RibbonStyle="Office2010">
            <dxr:RibbonDefaultPageCategory Caption="defaultCategory">
                <dxr:RibbonPage Caption="Tasks">
                    <dxr:RibbonPageGroup Caption="New / Edit">
                        <dxb:BarButtonItem Content="New Task" Command="{Binding ShowNewTaskWindowCommand}" LargeGlyph="pack://application:,,,/DevExpress.ProductsDemo.Wpf;component/Images/Tasks/NewTask.svg" />
                        <dxb:BarButtonItem Content="Edit Task" Command="{Binding ShowEditTaskWindowCommand}" IsEnabled="{Binding SelectedItem, Converter={StaticResource ObjectToBooleanConverter}}" LargeGlyph="pack://application:,,,/DevExpress.ProductsDemo.Wpf;component/Images/Contacts/Edit.svg"/>
                        <dxb:BarItemLinkSeparator/>
                        <dxb:BarButtonItem Content="Delete" Command="{Binding DeleteTaskCommand}" IsEnabled="{Binding SelectedItem, Converter={StaticResource ObjectToBooleanConverter}}" Glyph="pack://application:,,,/DevExpress.ProductsDemo.Wpf;component/Images/Contacts/Delete.svg" LargeGlyph="pack://application:,,,/DevExpress.ProductsDemo.Wpf;component/Images/Contacts/Delete.svg"/>
                    </dxr:RibbonPageGroup>
                    <dxr:RibbonPageGroup Caption="Follow Up" ShowCaptionButton="False">
                        <dxb:BarCheckItem IsChecked="{Binding FollowUpSelector[0], Mode=TwoWay}" AllowUncheckInGroup="True" Content="Today" Command="{Binding FollowUpCommand}" CommandParameter="Today" IsEnabled="{Binding SelectedItem, Converter={StaticResource ObjectToBooleanConverter}}" Glyph="pack://application:,,,/DevExpress.ProductsDemo.Wpf;component/Images/Tasks/Today.svg"/>
                        <dxb:BarCheckItem IsChecked="{Binding FollowUpSelector[1], Mode=TwoWay}" AllowUncheckInGroup="True" Content="Tomorrow" Command="{Binding FollowUpCommand}" CommandParameter="Tomorrow" IsEnabled="{Binding SelectedItem, Converter={StaticResource ObjectToBooleanConverter}}" Glyph="pack://application:,,,/DevExpress.ProductsDemo.Wpf;component/Images/Tasks/Tomorrow.svg"/>
                        <dxb:BarCheckItem IsChecked="{Binding FollowUpSelector[2], Mode=TwoWay}" AllowUncheckInGroup="True" Content="This Week" Command="{Binding FollowUpCommand}" CommandParameter="ThisWeek" IsEnabled="{Binding SelectedItem, Converter={StaticResource ObjectToBooleanConverter}}" Glyph="pack://application:,,,/DevExpress.ProductsDemo.Wpf;component/Images/Tasks/ThisWeek.svg"/>
                        <dxb:BarCheckItem IsChecked="{Binding FollowUpSelector[3], Mode=TwoWay}" AllowUncheckInGroup="True" Content="Next Week" Command="{Binding FollowUpCommand}" CommandParameter="NextWeek" IsEnabled="{Binding SelectedItem, Converter={StaticResource ObjectToBooleanConverter}}" Glyph="pack://application:,,,/DevExpress.ProductsDemo.Wpf;component/Images/Tasks/NextWeek.svg"/>
                        <dxb:BarCheckItem IsChecked="{Binding FollowUpSelector[4], Mode=TwoWay}" AllowUncheckInGroup="True" Content="No Date" Command="{Binding FollowUpCommand}" CommandParameter="NoDate" IsEnabled="{Binding SelectedItem, Converter={StaticResource ObjectToBooleanConverter}}" Glyph="pack://application:,,,/DevExpress.ProductsDemo.Wpf;component/Images/Tasks/NoDate.svg"/>
                        <dxb:BarCheckItem IsChecked="{Binding FollowUpSelector[5], Mode=TwoWay}" AllowUncheckInGroup="True" Content="Custom" Command="{Binding FollowUpCommand}" CommandParameter="Custom" IsEnabled="{Binding SelectedItem, Converter={StaticResource ObjectToBooleanConverter}}" Glyph="pack://application:,,,/DevExpress.ProductsDemo.Wpf;component/Images/Tasks/NoDate.svg" />
                    </dxr:RibbonPageGroup>
                    <dxr:RibbonPageGroup Caption="Current View">
                        <dxb:BarCheckItem GroupIndex="100" AllowUncheckInGroup="False" IsChecked="{Binding CheckedItemType, Converter={StaticResource itemTypeToBooleanConverter}, ConverterParameter={x:Static local:ItemType.List}}" Content="List"  Command="{Binding SetListViewCommand}" LargeGlyph="pack://application:,,,/DevExpress.ProductsDemo.Wpf;component/Images/Tasks/DetailView.svg"/>
                        <dxb:BarCheckItem GroupIndex="100" AllowUncheckInGroup="False" IsChecked="{Binding CheckedItemType, Converter={StaticResource itemTypeToBooleanConverter}, ConverterParameter={x:Static local:ItemType.ToDoListItem}}" Content="ToDoList" Command="{Binding SetToDoListViewCommand}" LargeGlyph="pack://application:,,,/DevExpress.ProductsDemo.Wpf;component/Images/Tasks/Active.svg"/>
                        <dxb:BarCheckItem GroupIndex="100" AllowUncheckInGroup="False" IsChecked="{Binding CheckedItemType, Converter={StaticResource itemTypeToBooleanConverter}, ConverterParameter={x:Static local:ItemType.CompletedItem}}" Content="Completed" Command="{Binding SetCompletedViewCommand}" LargeGlyph="pack://application:,,,/DevExpress.ProductsDemo.Wpf;component/Images/Tasks/Completed.svg"/>
                        <dxb:BarCheckItem GroupIndex="100" AllowUncheckInGroup="False" IsChecked="{Binding CheckedItemType, Converter={StaticResource itemTypeToBooleanConverter}, ConverterParameter={x:Static local:ItemType.TodayItem}}" Content="Today" Command="{Binding SetTodayViewCommand}" LargeGlyph="pack://application:,,,/DevExpress.ProductsDemo.Wpf;component/Images/Tasks/Today.svg"/>
                        <dxb:BarCheckItem GroupIndex="100" AllowUncheckInGroup="False" IsChecked="{Binding CheckedItemType, Converter={StaticResource itemTypeToBooleanConverter}, ConverterParameter={x:Static local:ItemType.PrioritizedItem}}" Content="Prioritized" Command="{Binding SetPrioritizedViewCommand}" LargeGlyph="pack://application:,,,/DevExpress.ProductsDemo.Wpf;component/Images/Tasks/Prioritized.svg"/>
                        <dxb:BarCheckItem GroupIndex="100" AllowUncheckInGroup="False" IsChecked="{Binding CheckedItemType, Converter={StaticResource itemTypeToBooleanConverter}, ConverterParameter={x:Static local:ItemType.OverdueItem}}" Content="Overdue" Command="{Binding SetOverdueViewCommand}" LargeGlyph="pack://application:,,,/DevExpress.ProductsDemo.Wpf;component/Images/Tasks/Overdue.svg"/>
                        <dxb:BarCheckItem GroupIndex="100" AllowUncheckInGroup="False" IsChecked="{Binding CheckedItemType, Converter={StaticResource itemTypeToBooleanConverter}, ConverterParameter={x:Static local:ItemType.SimpleListItem}}" Content="Simple List" Command="{Binding SetSimpleListViewCommand}" LargeGlyph="pack://application:,,,/DevExpress.ProductsDemo.Wpf;component/Images/Tasks/TaskList.svg"/>
                        <dxb:BarCheckItem GroupIndex="100" AllowUncheckInGroup="False" IsChecked="{Binding CheckedItemType, Converter={StaticResource itemTypeToBooleanConverter}, ConverterParameter={x:Static local:ItemType.DeferredItem}}" Content="Deferred" Command="{Binding SetDeferredViewCommand}" LargeGlyph="pack://application:,,,/DevExpress.ProductsDemo.Wpf;component/Images/Tasks/Deferred.svg"/>
                    </dxr:RibbonPageGroup>
                </dxr:RibbonPage>
                <dxr:RibbonPage Caption="View" MergeOrder="1">
                    <dxr:RibbonPageGroup Caption="Print">
                        <dxb:BarButtonItem x:Name="Print" Content="Print Preview" Command="{Binding PrintCommand}" LargeGlyph="pack://application:,,,/DevExpress.ProductsDemo.Wpf;component/Images/Print.svg"/>
                    </dxr:RibbonPageGroup>
                </dxr:RibbonPage>
            </dxr:RibbonDefaultPageCategory>
        </dxr:RibbonControl>
        <dxdo:DockLayoutManager Grid.Row="1">
            <dxdo:LayoutGroup Margin="1">
                <dxdo:LayoutPanel AllowClose="False" AllowFloat="False" AllowHide="False" ShowCaption="False" ShowBorder="False" ShowCloseButton="False">
                    <Grid>
                        <dxg:GridControl x:Name="grid" Grid.Row="1" Style="{StaticResource gridControlMVVMStyle}" View="{StaticResource view}" ColumnGeneratorStyle="{StaticResource columnGeneratorStyle}">
                            <dxmvvm:Interaction.Behaviors>
                                <local:GridControlColumnsUpdateLocker/>
                                <local:GridControlPrint/>
                                <local:StatusBarSummaryUpdate x:Name="customSummaryProvider"/>
                            </dxmvvm:Interaction.Behaviors>
                            <dxg:GridControl.GroupSummary>
                                <dxg:GridSummaryItem SummaryType="Count"/>
                            </dxg:GridControl.GroupSummary>
                            <dxg:GridControl.TotalSummary>
                                <dxg:GridSummaryItem SummaryType="Count"/>
                                <dxg:GridSummaryItem SummaryType="Custom"/>
                            </dxg:GridControl.TotalSummary>
                        </dxg:GridControl>
                    </Grid>
                </dxdo:LayoutPanel>
                <dxdo:LayoutPanel ItemWidth="Auto" AllowClose="False" ShowCaption="False" Margin="0" BorderBrush="{x:Null}" BorderThickness="0" ShowBorder="False" MaxWidth="250" MinWidth="200">
                    <dxe:ListBoxEdit ItemsSource="{Binding Employees}" Padding="13,15,10,0" BorderThickness="0" ShowBorder="False" BorderBrush="{x:Null}" SelectedItem="{Binding SelectedEmployee}">
                        <dxmvvm:Interaction.Triggers>
                            <dxmvvm:EventToCommand EventName="SelectedIndexChanged" Command="{Binding SelectedEmployee.ShowCommand}"/>
                        </dxmvvm:Interaction.Triggers>
                        <dxe:ListBoxEdit.ItemTemplate>
                            <DataTemplate>
                                <TextBlock Text="{Binding Path=Employee.Name.FullName, TargetNullValue=All\ Tasks, FallbackValue=All\ Tasks}"/>
                            </DataTemplate>
                        </dxe:ListBoxEdit.ItemTemplate>
                        <dxe:ListBoxEdit.StyleSettings>
                            <dxe:RadioListBoxEditStyleSettings/>
                        </dxe:ListBoxEdit.StyleSettings>
                    </dxe:ListBoxEdit>
                </dxdo:LayoutPanel>
            </dxdo:LayoutGroup>
        </dxdo:DockLayoutManager>
        <dxr:RibbonStatusBarControl>
            <dxr:RibbonStatusBarControl.LeftItems>
                <dxb:BarStaticItem Content="{Binding Count, ElementName=customSummaryProvider, Converter={StaticResource IntToItemsConverter}}"/>
                <dxb:BarItemLinkSeparator/>
                <dxb:BarButtonItem Glyph="pack://application:,,,/DevExpress.ProductsDemo.Wpf;component/Images/Tasks/Reminder.svg" BarItemDisplayMode="ContentAndGlyph" GlyphSize="Small" GlyphAlignment="Right" Content="REMINDERS: 11"/>
            </dxr:RibbonStatusBarControl.LeftItems>
        </dxr:RibbonStatusBarControl>
    </Grid>
</UserControl>