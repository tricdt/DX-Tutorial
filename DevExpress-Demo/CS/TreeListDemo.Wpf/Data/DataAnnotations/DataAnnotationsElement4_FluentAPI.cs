using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.ComponentModel.DataAnnotations;
using DevExpress.Mvvm.DataAnnotations;

namespace TreeListDemo {
    [MetadataType(typeof(DataAnnotationsElement4Metadata))]
    public class DataAnnotationsElement4_FluentAPI {
        public int ID { get; set; }
        public int ParentID { get; set; }
        public CategoryData ProductCategory { get; set; }
        public string ProductName { get; set; }
        public string CustomerName { get; set; }
        public DateTime OrderDate { get; set; }
        public int Quantity { get; set; }
        public decimal Price { get; set; }
        public bool IsReady { get; set; }
        public override string ToString() {
            return "Nested Bands Layout (Fluent API)";
        }
    }

    public class DataAnnotationsElement4Metadata : IMetadataProvider<DataAnnotationsElement4_FluentAPI> {
        void IMetadataProvider<DataAnnotationsElement4_FluentAPI>.BuildMetadata(MetadataBuilder<DataAnnotationsElement4_FluentAPI> builder) {
            var groupBuilder = builder.TableLayout();
            builder.Property(p => p.ID).DisplayName("Id").NotAutoGenerated().NotEditable();
            builder.Property(p => p.ParentID).DisplayName("ParentID").NotAutoGenerated().NotEditable();

            builder.Property(p => p.ProductCategory).DisplayName("Category").NotEditable();
            builder.Property(p => p.ProductName).DisplayName("Name").NotEditable();

            groupBuilder.Group("Product Details")
                .ContainsProperty(p => p.ProductCategory)
                .ContainsProperty(p => p.ProductName);

            builder.Property(p => p.CustomerName).DisplayName("Customer").NotEditable();
            builder.Property(p => p.OrderDate).DisplayName("Date");
            groupBuilder.GroupContainer("Order Details")
                .Group("Main")
                    .ContainsProperty(p => p.CustomerName)
                    .ContainsProperty(p => p.OrderDate);

            builder.Property(p => p.Price).CurrencyDataType();
            builder.Property(p => p.IsReady).DisplayName("Is ready");
            groupBuilder.GroupContainer("Order Details")
                .Group("Status")
                    .ContainsProperty(p => p.Quantity)
                    .ContainsProperty(p => p.Price)
                    .ContainsProperty(p => p.IsReady);
        }
    }
}
