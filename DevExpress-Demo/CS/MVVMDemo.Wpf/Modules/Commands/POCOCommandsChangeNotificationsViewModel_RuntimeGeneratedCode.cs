using DevExpress.Mvvm;
using System.ComponentModel;

// This class demonstrates the code that will be generated by the POCO mechanism at runtime

namespace MVVMDemo.Commands {
    public class POCOCommandsChangeNotificationsViewModel_RuntimeGeneratedCode : POCOCommandsChangeNotificationsViewModel, INotifyPropertyChanged {
        DelegateCommand _SaveCommand;
        public DelegateCommand SaveCommand {
            get {
                return _SaveCommand ?? 
                    (_SaveCommand = new DelegateCommand(Save, CanSave, useCommandManager: false));
            }
        }

        #region properties
        public override bool CanExecuteSaveCommand {
            get { return base.CanExecuteSaveCommand; }
            set {
                if(base.CanExecuteSaveCommand == value)
                    return;
                base.CanExecuteSaveCommand = value;
                OnCanExecuteSaveCommandChanged();
                RaisePropertyChanged("CanExecuteSaveCommand");
            }
        }
        #endregion

        #region INotifyPropertyChanged implementation
        public event PropertyChangedEventHandler PropertyChanged;

        private void RaisePropertyChanged(string propertyName) {
            var handler = PropertyChanged;
            if(handler != null)
                handler(this, new PropertyChangedEventArgs(propertyName));
        }
        #endregion
    }
}
