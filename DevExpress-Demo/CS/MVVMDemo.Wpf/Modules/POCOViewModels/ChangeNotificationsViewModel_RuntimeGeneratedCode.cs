using DevExpress.Mvvm;
using System.ComponentModel;

// This class demonstrates the code that will be generated by the POCO mechanism at runtime

namespace MVVMDemo.POCOViewModels {
    public class ChangeNotificationsViewModel_RuntimeGeneratedCode : ChangeNotificationsViewModel, INotifyPropertyChanged {
        public override string FirstName {
           get { return base.FirstName; }
           set {
               if(base.FirstName == value)
                   return;
               string oldValue = base.FirstName;
               base.FirstName = value;
               OnNameChanged();
               RaisePropertyChanged("FirstName");
           }
        }

        public override string LastName {
           get { return base.LastName; }
           set {
               if(base.LastName == value)
                   return;
               string oldValue = base.LastName;
               base.LastName = value;
               OnNameChanged();
               RaisePropertyChanged("LastName");
           }
        }

        DelegateCommand _RegisterCommand;
        public DelegateCommand RegisterCommand {
            get {
                return _RegisterCommand ??
                    (_RegisterCommand = new DelegateCommand(Register, CanRegister));
            }
        }

        #region INotifyPropertyChanged implementation
        public event PropertyChangedEventHandler PropertyChanged;

        private void RaisePropertyChanged(string propertyName) {
            var handler = PropertyChanged;
            if(handler != null)
                handler(this, new PropertyChangedEventArgs(propertyName));
        }
        #endregion
    }
}
