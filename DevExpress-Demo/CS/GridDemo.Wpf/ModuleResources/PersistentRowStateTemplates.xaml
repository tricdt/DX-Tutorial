<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:dx="http://schemas.devexpress.com/winfx/2008/xaml/core"
                    xmlns:dxe="http://schemas.devexpress.com/winfx/2008/xaml/editors"
                    xmlns:dxg="http://schemas.devexpress.com/winfx/2008/xaml/grid"
                    xmlns:dxgt="http://schemas.devexpress.com/winfx/2008/xaml/grid/themekeys"
                    xmlns:dxmvvm="http://schemas.devexpress.com/winfx/2008/xaml/mvvm"
                    xmlns:dxi="http://schemas.devexpress.com/winfx/2008/xaml/core/internal"
                    xmlns:local="clr-namespace:GridDemo">
    <Thickness x:Key="PersistentRowStateZoomOutMargin">0,0,12,0</Thickness>
    <Thickness x:Key="PersistentRowStateZoomInMargin">12,0,0,0</Thickness>
    <Thickness x:Key="PersistentRowStateImageMargin">0,0,0,0</Thickness>
    <LinearGradientBrush x:Key="control-emboss" EndPoint="0.5,1.002" StartPoint="0.5,-0.002" SpreadMethod="Pad">
        <GradientStop Color="#3E4C6EB3" Offset="0" />
        <GradientStop Color="#80EDF4FF" Offset="1" />
        <GradientStop Color="#3F7098DC" Offset="0.215" />
    </LinearGradientBrush>
    <Style TargetType="{x:Type local:ResizeableDataRow}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type local:ResizeableDataRow}">
                    <dx:MeasurePixelSnapper>
                        <dxg:RowDetailContainerControl x:Name="containerControl">
                            <dxg:RowDetailContainerControl.Template>
                                <ControlTemplate TargetType="{x:Type ContentControl}">
                                    <ContentPresenter />
                                </ControlTemplate>
                            </dxg:RowDetailContainerControl.Template>
                            <Grid x:Name="template" MinHeight="125" Height="{Binding Path=RowState.(local:ResizeableDataRow.RowHeight)}">
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="*"></RowDefinition>
                                    <RowDefinition Height="Auto"></RowDefinition>
                                </Grid.RowDefinitions>
                                <Border Grid.Row="0" CornerRadius="0" Width="Auto" Height="Auto" x:Name="content_container2" Background="{Binding Background, ElementName=containerControl}"
                                        BorderBrush="{dxi:ThemeResource {dxgt:GridRowThemeKey ResourceKey=GridDataRowDelimiterBrush}}" BorderThickness="0,1,0,0">
                                    <Grid>
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition Width="Auto" />
                                            <ColumnDefinition Width="12" />
                                            <ColumnDefinition />
                                        </Grid.ColumnDefinitions>
                                        <dxe:ImageEdit Width="200" Margin="12,12,0,12" HorizontalAlignment="Left" VerticalAlignment="Top" Source="{Binding Path=DataContext.Photo}" Grid.Column="0" ShowMenu="False" IsReadOnly="True"/>
                                        <ScrollViewer VerticalScrollBarVisibility="Visible" Grid.Column="2">
                                            <TextBox Foreground="{Binding Path=(TextBox.Foreground), ElementName=containerControl}"
                                                         BorderThickness="0" Text="{Binding DataContext.Description}" TextWrapping="Wrap" AcceptsReturn="True" IsReadOnly="True">
                                                <dxmvvm:Interaction.Behaviors>
                                                    <local:CommandManagerAttachedBehavior CanExecuteHandlerCommand="{Binding View.DataContext.CanExecuteHandlerCommand}" />
                                                </dxmvvm:Interaction.Behaviors>
                                            </TextBox>
                                        </ScrollViewer>

                                    </Grid>
                                </Border>
                                <dxg:RowSplitter Name="PART_Resizer" Grid.Row="1" Cursor="SizeNS" />
                            </Grid>
                        </dxg:RowDetailContainerControl>
                    </dx:MeasurePixelSnapper>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <DataTemplate x:Key="PersistentRowStateDataRowTemplate">
        <local:ResizeableDataRow />
    </DataTemplate>
    <Style x:Key="ZoomButtonStyle" TargetType="{x:Type Button}">
        <Setter Property="HorizontalContentAlignment" Value="Stretch" />
        <Setter Property="VerticalContentAlignment" Value="Stretch" />
        <Setter Property="Width" Value="16" />
        <Setter Property="Height" Value="16" />
        <Setter Property="Padding" Value="2" />
    </Style>
    <Style x:Key="ZoomInButtonStyle" TargetType="{x:Type Button}" BasedOn="{StaticResource ZoomButtonStyle}">
        <Setter Property="ContentTemplate">
            <Setter.Value>
                <DataTemplate>
                    <Grid>
                        <Rectangle Fill="{Binding}" Width="2" HorizontalAlignment="Center" VerticalAlignment="Stretch" />
                        <Rectangle Fill="{Binding}" Height="2" HorizontalAlignment="Stretch" VerticalAlignment="Center" />
                    </Grid>
                </DataTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="ZoomOutButtonStyle" TargetType="{x:Type Button}" BasedOn="{StaticResource ZoomButtonStyle}">
        <Setter Property="ContentTemplate">
            <Setter.Value>
                <DataTemplate>
                    <Grid>
                        <Rectangle Fill="{Binding}" Height="2" HorizontalAlignment="Stretch" VerticalAlignment="Center" />
                    </Grid>
                </DataTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style TargetType="{x:Type local:ResizeableCard}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type local:ResizeableCard}">
                    <DockPanel HorizontalAlignment="Center" VerticalAlignment="Center">
                        <Slider Visibility="Collapsed" Name="Slider" Minimum="0.2" Maximum="2" Value="{Binding Path=RowState.(local:ResizeableCard.ScaleFactor), Mode=TwoWay}" />
                        <Button x:Name="zoomOutButton" DockPanel.Dock="Left" Margin="{DynamicResource PersistentRowStateZoomOutMargin}"
                                Style="{DynamicResource ZoomOutButtonStyle}"
                                Command="{x:Static Slider.DecreaseSmall}" CommandTarget="{Binding ElementName=Slider}"
                                Content="{Binding Foreground, RelativeSource={RelativeSource Self}}">
                            <dxmvvm:Interaction.Triggers>
                                <dxmvvm:EventToCommand EventName="Click" Command="{Binding View.DataContext.SetCursorPositionCommand}" CommandParameter="{Binding ElementName=zoomOutButton}" />
                            </dxmvvm:Interaction.Triggers>
                        </Button>
                        <Button x:Name="zoomInButton" DockPanel.Dock="Right" Margin="{DynamicResource PersistentRowStateZoomInMargin}" Style="{DynamicResource ZoomInButtonStyle}"
                                Command="{x:Static Slider.IncreaseSmall}" CommandTarget="{Binding ElementName=Slider}"
                                Content="{Binding Foreground, RelativeSource={RelativeSource Self}}">
                            <dxmvvm:Interaction.Triggers>
                                <dxmvvm:EventToCommand EventName="Click" Command="{Binding View.DataContext.SetCursorPositionCommand}" CommandParameter="{Binding ElementName=zoomInButton}" />
                            </dxmvvm:Interaction.Triggers>
                        </Button>
                        <dxe:ImageEdit Margin="{DynamicResource PersistentRowStateImageMargin}" Source="{Binding Path=DataContext.Photo}" Stretch="None" ShowMenu="False" IsReadOnly="True">
                            <dxe:ImageEdit.LayoutTransform>
                                <ScaleTransform ScaleX="{Binding Path=Value, ElementName=Slider}" ScaleY="{Binding Path=Value, ElementName=Slider}" />
                            </dxe:ImageEdit.LayoutTransform>
                        </dxe:ImageEdit>
                    </DockPanel>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <dxg:TableView x:Key="gridView" ShowGroupedColumns="True" NavigationStyle="Row" ShowHorizontalLines="False" AllowScrollAnimation="True"
                   RowDetailsVisibilityMode="Visible" RowDetailsTemplate="{StaticResource PersistentRowStateDataRowTemplate}"/>
    <dxg:CardView x:Key="cardView" ShowGroupedColumns="True" MaxCardCountInRow="1" CardAlignment="Center" NavigationStyle="None">
        <dxg:CardView.CardHeaderTemplate>
            <DataTemplate>
                <StackPanel Orientation="Horizontal">
                    <TextBlock Text="{Binding Path=Data.Trademark.Name}" TextWrapping="NoWrap" />
                    <TextBlock Text="{Binding Path=Data.Name}" TextWrapping="NoWrap" Margin="8,0,0,0" />
                </StackPanel>
            </DataTemplate>
        </dxg:CardView.CardHeaderTemplate>
        <dxg:CardView.CardTemplate>
            <DataTemplate>
                <local:ResizeableCard />
            </DataTemplate>
        </dxg:CardView.CardTemplate>
    </dxg:CardView>
</ResourceDictionary>