Imports System
Imports System.Windows
Imports DevExpress.Xpf.LayoutControl
Imports DevExpress.Mvvm.UI.Interactivity

Namespace LayoutControlDemo

    Public Class LayoutControlCustomizationBehavior
        Inherits Behavior(Of DataLayoutControl)

        Public Property SelectedItem As FrameworkElement
            Get
                Return CType(GetValue(SelectedItemProperty), FrameworkElement)
            End Get

            Set(ByVal value As FrameworkElement)
                SetValue(SelectedItemProperty, value)
            End Set
        End Property

        Public Shared ReadOnly SelectedItemProperty As DependencyProperty = DependencyProperty.Register("SelectedItem", GetType(FrameworkElement), GetType(LayoutControlCustomizationBehavior), New PropertyMetadata(CType(Nothing, PropertyChangedCallback)))

        Public Property AllowCustomization As Boolean
            Get
                Return CBool(GetValue(AllowCustomizationProperty))
            End Get

            Set(ByVal value As Boolean)
                SetValue(AllowCustomizationProperty, value)
            End Set
        End Property

        Public Shared ReadOnly AllowCustomizationProperty As DependencyProperty = DependencyProperty.Register("AllowCustomization", GetType(Boolean), GetType(LayoutControlCustomizationBehavior), New PropertyMetadata(True, New PropertyChangedCallback(AddressOf LayoutControlDemo.LayoutControlCustomizationBehavior.AllowCustomizationChanged)))

        Private Shared Sub AllowCustomizationChanged(ByVal d As DependencyObject, ByVal e As DependencyPropertyChangedEventArgs)
            CType(d, LayoutControlCustomizationBehavior).OnAllowCustomizationChanged()
        End Sub

        Private Sub OnAllowCustomizationChanged()
            If AssociatedObject IsNot Nothing AndAlso AssociatedObject.IsCustomization AndAlso Not AllowCustomization Then AssociatedObject.Controller.CustomizationController.SelectedElements.Clear()
        End Sub

        Protected Overrides Sub OnAttached()
            MyBase.OnAttached()
            AddHandler AssociatedObject.IsCustomizationChanged, AddressOf OnIsCustomizationChanged
            AddHandler AssociatedObject.AutoGeneratedUI, AddressOf OnAutoGeneratedUI
        End Sub

        Protected Overrides Sub OnDetaching()
            RemoveHandler AssociatedObject.AutoGeneratedUI, AddressOf OnAutoGeneratedUI
            RemoveHandler AssociatedObject.IsCustomizationChanged, AddressOf OnIsCustomizationChanged
            MyBase.OnDetaching()
        End Sub

        Private Sub OnAutoGeneratedUI(ByVal sender As Object, ByVal e As EventArgs)
            If AssociatedObject.AutoGeneratedItemsLocation = DataLayoutControlAutoGeneratedItemsLocation.AvailableItems Then AssociatedObject.IsCustomization = True
        End Sub

        Private Sub OnIsCustomizationChanged(ByVal sender As Object, ByVal e As EventArgs)
            If AssociatedObject.IsCustomization Then
                AddHandler AssociatedObject.Controller.CustomizationController.SelectionChanged, AddressOf layoutItems_SelectionChanged
            Else
                RemoveHandler AssociatedObject.Controller.CustomizationController.SelectionChanged, AddressOf layoutItems_SelectionChanged
            End If

            SelectedItem = Nothing
        End Sub

        Private Sub layoutItems_SelectionChanged(ByVal sender As Object, ByVal e As LayoutControlSelectionChangedEventArgs)
            If e.SelectedElements.Count = 1 AndAlso TypeOf e.SelectedElements(0) Is DataLayoutItem Then
                SelectedItem = e.SelectedElements(0)
            Else
                SelectedItem = Nothing
            End If
        End Sub
    End Class
End Namespace
