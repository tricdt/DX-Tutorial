<local:WindowsUIDemoModule x:Class="WindowsUIDemo.Notifications"
                           xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                           xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                           xmlns:dxe="http://schemas.devexpress.com/winfx/2008/xaml/editors"
                           xmlns:dx="http://schemas.devexpress.com/winfx/2008/xaml/core"
                           xmlns:dxmvvm="http://schemas.devexpress.com/winfx/2008/xaml/mvvm"
                           xmlns:dxlc="http://schemas.devexpress.com/winfx/2008/xaml/layoutcontrol"
                           xmlns:local="clr-namespace:WindowsUIDemo"
                           xmlns:helpers="clr-namespace:DevExpress.Xpf.DemoBase.Helpers;assembly=DevExpress.Xpf.DemoBase.v22.2"
                           xmlns:utils="clr-namespace:DevExpress.Utils;assembly=DevExpress.Data.Desktop.v22.2"
                           xmlns:sys="clr-namespace:System;assembly=mscorlib"
                           xmlns:win="clr-namespace:System.Windows;assembly=PresentationCore"
                           ModuleLoaded="OnModuleLoaded"
                           ModuleUnloaded="OnModuleUnloaded"
                           x:Name="root"
                           DataContext="{dxmvvm:ViewModelSource Type={x:Type local:NotificationsViewModel}}">
    <local:WindowsUIDemoModule.Resources>
        <DataTemplate x:Key="CustomNotificationTemplate">
            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto" />
                    <ColumnDefinition />
                </Grid.ColumnDefinitions>
                <Border Background="#FF3D3D3D" CornerRadius="10,0,0,10">
                    <Image Source="pack://application:,,,/WindowsUIDemo;component/Images/notification-icon.png" Stretch="None" Width="100" Height="100" />
                </Border>
                <Border Grid.Column="1" CornerRadius="0,10,10,0" Background="{Binding Background}">
                    <StackPanel Margin="10">
                        <TextBlock FontSize="18" Foreground="White" Text="Lorem ipsum dolor sit amet" FontWeight="SemiBold" Margin="0,0,0,5" />
                        <TextBlock FontSize="14"
                                   Foreground="Black"
                                   TextWrapping="Wrap"
                                   Text="In ornare ante magna, eget volutpat mi bibendum a. Nam ut ullamcorper libero." />
                    </StackPanel>
                </Border>
            </Grid>
        </DataTemplate>
        <dxmvvm:ObjectToObjectConverter x:Key="PreviewVisibilityConverter" DefaultTarget="Collapsed">
            <dxmvvm:MapItem Source="1" Target="Visible" />
        </dxmvvm:ObjectToObjectConverter>
        <dxmvvm:ObjectToObjectConverter x:Key="InversePreviewVisibilityConverter" DefaultTarget="Collapsed">
            <dxmvvm:MapItem Source="0" Target="Visible" />
        </dxmvvm:ObjectToObjectConverter>
        <Style TargetType="Button" x:Key="ShowButtonStyle">
            <Setter Property="FontSize" Value="18" />
            <Setter Property="HorizontalContentAlignment" Value="Center" />
            <Setter Property="VerticalContentAlignment" Value="Center" />
            <Setter Property="Padding" Value="40,8" />
        </Style>
        <Style x:Key="CustomNotificationStyle" TargetType="ContentControl">
            <Setter Property="Width" Value="{Binding DataContext.Width, RelativeSource={RelativeSource Self}}" />
            <Setter Property="Height" Value="{Binding DataContext.Height, RelativeSource={RelativeSource Self}}" />
        </Style>
    </local:WindowsUIDemoModule.Resources>
    <dxmvvm:Interaction.Behaviors>
        <dxmvvm:NotificationService x:Name="notificationService"
                                    CustomNotificationStyle="{StaticResource CustomNotificationStyle}"
                                    PredefinedNotificationTemplate="{Binding SelectedItem.Template, Source={x:Reference predefinedNotificationsList}}"
                                    PredefinedNotificationDuration="{Binding EditValue, Source={x:Reference duration}}"
                                    Sound="{Binding EditValue, Source={x:Reference sound}}"
                                    UseWin8NotificationsIfAvailable="{Binding IsChecked, Source={x:Reference useWin8Notifications}}"
                                    CustomNotificationDuration="{Binding EditValue, Source={x:Reference customDuration}}"
                                    CustomNotificationPosition="{Binding EditValue, Source={x:Reference position}}"
                                    CustomNotificationVisibleMaxCount="{Binding EditValue, Source={x:Reference maxCount}}"
                                    CustomNotificationScreen="{Binding EditValue, Source={x:Reference screen}}"
                                    CustomNotificationTemplate="{StaticResource CustomNotificationTemplate}"
                                    ApplicationActivator="{x:Type local:UIDemoNotificationActivator}"
                                    ApplicationName="{x:Static local:Notifications.ApplicationName}">
            <dxmvvm:NotificationService.ApplicationId>
                <Binding Source="{x:Static local:Notifications.ApplicationID}" />
            </dxmvvm:NotificationService.ApplicationId>
        </dxmvvm:NotificationService>
    </dxmvvm:Interaction.Behaviors>
    <Grid>
        <Grid.ColumnDefinitions>
            <ColumnDefinition />
            <ColumnDefinition Width="280" />
        </Grid.ColumnDefinitions>
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto" />
            <RowDefinition />
        </Grid.RowDefinitions>
        <Grid Grid.RowSpan="2" Margin="0,0,12,0">
            <dx:ThemedBorder Margin="12,12,0,12"
                             BorderThickness="1"
                    Visibility="{Binding SelectedIndex, ElementName=SettingsTabControl, Converter={StaticResource InversePreviewVisibilityConverter}}">
                <DockPanel>
                    <Button DockPanel.Dock="Bottom"
                            HorizontalAlignment="Center"
                            Content="Show"
                            Command="{Binding ShowPredefinedCommand}"
                            Style="{StaticResource ShowButtonStyle}"
                            Margin="0,12,0,12" />
                    <ListView x:Name="predefinedNotificationsList"
                              BorderThickness="0"
                              Background="Transparent"
                              ScrollViewer.HorizontalScrollBarVisibility="Disabled"
                              SelectedIndex="0"
                              Margin="11,11,11,0">
                        <ListView.ItemContainerStyle>
                            <Style TargetType="ListViewItem">
                                <Setter Property="Template">
                                    <Setter.Value>
                                        <ControlTemplate>
                                            <Border>
                                                <VisualStateManager.VisualStateGroups>
                                                    <VisualStateGroup x:Name="CommonStates">
                                                        <VisualState x:Name="Normal" />
                                                        <VisualState x:Name="MouseOver" />
                                                        <VisualState x:Name="Disabled" />
                                                    </VisualStateGroup>
                                                    <VisualStateGroup x:Name="SelectionStates">
                                                        <VisualState x:Name="Unselected" />
                                                        <VisualState x:Name="Selected">
                                                            <Storyboard>
                                                                <ColorAnimationUsingKeyFrames Storyboard.TargetName="Border" Storyboard.TargetProperty="(Border.Background).(SolidColorBrush.Color)">
                                                                    <EasingColorKeyFrame KeyTime="0" Value="#FFF7941E" />
                                                                </ColorAnimationUsingKeyFrames>
                                                                <ColorAnimationUsingKeyFrames Storyboard.TargetName="Description"
                                                                                              Storyboard.TargetProperty="(TextBlock.Foreground).(SolidColorBrush.Color)">
                                                                    <EasingColorKeyFrame KeyTime="0" Value="White" />
                                                                </ColorAnimationUsingKeyFrames>
                                                            </Storyboard>
                                                        </VisualState>
                                                    </VisualStateGroup>
                                                </VisualStateManager.VisualStateGroups>
                                                <Border x:Name="Border" Padding="21,11,21,11" Background="White" Margin="0,0,0,13">
                                                    <Grid x:Name="Grid" Height="80">
                                                        <Grid.ColumnDefinitions>
                                                            <ColumnDefinition Width="Auto" />
                                                            <ColumnDefinition />
                                                        </Grid.ColumnDefinitions>
                                                        <StackPanel Background="#FF595959" Orientation="Horizontal">
                                                            <StackPanel.Resources>
                                                                <Style TargetType="TextBlock">
                                                                    <Setter Property="Width" Value="221" />
                                                                    <Setter Property="IsHitTestVisible" Value="False" />
                                                                    <Setter Property="Background" Value="Transparent" />
                                                                    <Setter Property="Foreground" Value="White" />
                                                                    <Setter Property="FontSize" Value="14" />
                                                                    <Setter Property="Padding" Value="20,0,0,0" />
                                                                    <Setter Property="VerticalAlignment" Value="Center" />
                                                                </Style>
                                                            </StackPanel.Resources>
                                                            <Image Margin="0,0,-15,0"
                                                                   Width="80"
                                                                   Height="80"
                                                                   Source="pack://application:,,,/WindowsUIDemo;component/Images/sun.png"
                                                                   HorizontalAlignment="Left"
                                                                   Visibility="{Binding DataContext.ShowImage, RelativeSource={RelativeSource FindAncestor, AncestorType=ListView}, 
                                                                                Converter={dxmvvm:BooleanToVisibilityConverter}}" />
                                                            <StackPanel VerticalAlignment="Center">
                                                                <TextBlock Text="Lorem ipsum dolor sit amet"
                                                                           FontWeight="{DXBinding 'Template == $dxmvvm:NotificationTemplate.LongText and (!@e(notificationService).UseWin8NotificationsIfAvailable or !$utils:WindowsVersionProvider.IsWin10AnniversaryUpdateOrHigher) ? $win:FontWeights.Normal : $win:FontWeights.Bold'}"/>
                                                                <TextBlock Text="integer fringilla, dui eget"
                                                                           FontWeight="{DXBinding '(Template == $dxmvvm:NotificationTemplate.LongText and @e(notificationService).UseWin8NotificationsIfAvailable and $utils:WindowsVersionProvider.IsWin10AnniversaryUpdateOrHigher) or Template == $dxmvvm:NotificationTemplate.LongHeaderAndShortText ? $win:FontWeights.Bold : $win:FontWeights.Normal'}"/>
                                                                <TextBlock Text="ultrices cursus, justo tellus"
                                                                           FontWeight="{DXBinding 'Template == $dxmvvm:NotificationTemplate.LongText and @e(notificationService).UseWin8NotificationsIfAvailable and $utils:WindowsVersionProvider.IsWin10AnniversaryUpdateOrHigher ? $win:FontWeights.Bold : $win:FontWeights.Normal'}"/>
                                                            </StackPanel>
                                                        </StackPanel>
                                                        <TextBlock x:Name="Description"
                                                                   FontSize="14"
                                                                   Margin="40,0,10,0"
                                                                   Foreground="Black"
                                                                   TextWrapping="Wrap"
                                                                   Grid.Column="2"
                                                                   VerticalAlignment="Center"
                                                                   Text="{DXBinding '@e(notificationService).UseWin8NotificationsIfAvailable and $utils:WindowsVersionProvider.IsWin10AnniversaryUpdateOrHigher ? Win10Description : Description' }"/>
                                                    </Grid>
                                                </Border>
                                            </Border>
                                        </ControlTemplate>
                                    </Setter.Value>
                                </Setter>
                                <Setter Property="Visibility" Value="{DXBinding 'Template == $dxmvvm:NotificationTemplate.ShortHeaderAndLongText and @e(notificationService).UseWin8NotificationsIfAvailable and $utils:WindowsVersionProvider.IsWin10AnniversaryUpdateOrHigher ? `Collapsed` : `Visible`' }"/>
                            </Style>
                        </ListView.ItemContainerStyle>
                        <ListView.ItemsPanel>
                            <ItemsPanelTemplate>
                                <StackPanel Margin="0,0,0,-13" />
                            </ItemsPanelTemplate>
                        </ListView.ItemsPanel>
                        <ListView.Items>
                            <local:NotificationInfo
                                Template="LongText"
                                Description="A single string wrapped across a maximum of three lines of text."
                                Win10Description="A single string of highlighted text wrapped across multiple lines."/>
                            <local:NotificationInfo
                                Template="ShortHeaderAndLongText"
                                Description="One string of bold text on the first line, one string of regular text wrapped across the second and third lines."
                                Win10Description="A single string of highlighted text wrapped across the first two lines, regular text on the other lines."/>
                            <local:NotificationInfo
                                Template="LongHeaderAndShortText"
                                Description="One string of bold text wrapped across the first and second lines, one string of regular text on the third line."
                                Win10Description="A single string of highlighted text wrapped across the first two lines, regular text on the other lines."/>
                            <local:NotificationInfo
                                Template="ShortHeaderAndTwoTextFields"
                                Description="One string of bold text on the first line, one string of regular text on the second line, one string of regular text on the third line"
                                Win10Description="A single string of highlighted text wrapped across the first two lines, two strings of regular text on the other lines."/>
                        </ListView.Items>
                    </ListView>
                </DockPanel>
            </dx:ThemedBorder>
            <dx:ThemedBorder Margin="12,12,0,12"
                    BorderThickness="1"
                    Visibility="{Binding SelectedIndex, ElementName=SettingsTabControl, Converter={StaticResource PreviewVisibilityConverter}}">
                <DockPanel>
                    <Button DockPanel.Dock="Bottom"
                            HorizontalAlignment="Center"
                            Content="Show"
                            Command="{Binding ShowCustomCommand}"
                            Style="{StaticResource ShowButtonStyle}"
                            Margin="0,0,0,12" />
                    <Border Width="{DXBinding 'CustomNotificationWidth + 48'}" Height="{DXBinding 'CustomNotificationHeight + 48'}" Background="White">
                        <Grid Width="{Binding CustomNotificationWidth}" Height="{Binding CustomNotificationHeight}" HorizontalAlignment="Center" VerticalAlignment="Center">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="Auto" />
                                <ColumnDefinition />
                            </Grid.ColumnDefinitions>
                            <Border Background="#FF3D3D3D" CornerRadius="10,0,0,10">
                                <Image Source="pack://application:,,,/WindowsUIDemo;component/Images/notification-icon.png" Stretch="None" Width="100" Height="100" />
                            </Border>
                            <Border Grid.Column="1" CornerRadius="0,10,10,0" Background="{Binding CustomNotificationBackgroundBrush}">
                                <StackPanel Margin="10">
                                    <TextBlock FontSize="18" Foreground="White" Text="Lorem ipsum dolor sit amet" FontWeight="SemiBold" Margin="0,0,0,5" />
                                    <TextBlock FontSize="14"
                                           Foreground="Black"
                                           TextWrapping="Wrap"
                                           Text="In ornare ante magna, eget volutpat mi bibendum a. Nam ut ullamcorper libero." />
                                </StackPanel>
                            </Border>
                        </Grid>
                    </Border>
                </DockPanel>
            </dx:ThemedBorder>
        </Grid>
        <TabControl Grid.Column="1" Margin="0,12,12,0" Padding="0,7,0,0" x:Name="SettingsTabControl">
            <TabItem Header="Predefined">
                <dxlc:LayoutControl Orientation="Vertical">
                    <dxlc:LayoutItem>
                        <CheckBox Grid.Column="1" Content="Image" VerticalAlignment="Center" IsChecked="{Binding ShowImage, Mode=TwoWay}" />
                    </dxlc:LayoutItem>
                    <dxlc:LayoutItem>
                        <CheckBox x:Name="useWin8Notifications"
                                  Grid.Column="0"
                                  Content="Prefer Native Notifications on Win10/11"
                                  VerticalAlignment="Center"
                                  IsChecked="True" />
                    </dxlc:LayoutItem>
                    <dxlc:LayoutItem Label="Sound:">
                        <dxe:ComboBoxEdit x:Name="sound"
                                          Margin="19,0,0,0"
                                          IsTextEditable="False"
                                          ItemsSource="{dxe:EnumItemsSource EnumType={x:Type dxmvvm:PredefinedSound}}"
                                          SelectedIndex="0" />
                    </dxlc:LayoutItem>
                    <dxlc:LayoutItem Label="Duration:">
                        <dxe:ComboBoxEdit x:Name="duration"
                                          Margin="19,0,0,0"
                                          VerticalAlignment="Center"
                                          Grid.Row="2"
                                          Grid.Column="1"
                                          IsTextEditable="False"
                                          ItemsSource="{dxe:EnumItemsSource EnumType={x:Type dxmvvm:PredefinedNotificationDuration}}"
                                          SelectedIndex="0" />
                    </dxlc:LayoutItem>
                    <dxlc:LayoutGroup Orientation="Vertical"
                                      ItemLabelsAlignment="Local"
                                      Visibility="{Binding UseWin8NotificationsIfAvailable, ElementName=notificationService, Converter={dxmvvm:BooleanToVisibilityConverter Inverse=True}}">
                        <dxlc:LayoutItem Label="Position" >
                            <dxe:ComboBoxEdit IsTextEditable="False"
                                          ItemsSource="{Binding ItemsSource, ElementName=position}"
                                          EditValue="{Binding EditValue, ElementName=position, Mode=TwoWay}"
                                          SelectedIndex="0" />
                        </dxlc:LayoutItem>
                        <dxlc:LayoutItem Label="Maximum on Screen">
                            <dxe:ComboBoxEdit IsTextEditable="False" SelectedIndex="0"
                                              EditValue="{Binding EditValue, ElementName=maxCount, Mode=TwoWay}"
                                              ItemsSource="{Binding Items, ElementName=maxCount}">
                            </dxe:ComboBoxEdit>
                        </dxlc:LayoutItem>
                    </dxlc:LayoutGroup>
                </dxlc:LayoutControl>
            </TabItem>
            <TabItem Header="Custom">
                <dxlc:LayoutControl Orientation="Vertical">
                    <dxlc:LayoutItem Label="Background Color">
                        <dxe:PopupColorEdit EditValue="{Binding CustomNotificationBackground, UpdateSourceTrigger=PropertyChanged}" />
                    </dxlc:LayoutItem>
                    <dxlc:LayoutItem Label="Notification Width">
                        <dxe:SpinEdit EditValue="{Binding CustomNotificationWidth, UpdateSourceTrigger=PropertyChanged}"
                                      MinValue="200"
                                      MaxValue="600"
                                      EditValueType="{x:Type sys:Double}" />
                    </dxlc:LayoutItem>
                    <dxlc:LayoutItem Label="Notification Height">
                        <dxe:SpinEdit EditValue="{Binding CustomNotificationHeight, UpdateSourceTrigger=PropertyChanged}"
                                      MinValue="100"
                                      MaxValue="400"
                                      EditValueType="{x:Type sys:Double}" />
                    </dxlc:LayoutItem>
                    <dxlc:LayoutItem Label="Position">
                        <dxe:ComboBoxEdit x:Name="position"
                                          IsTextEditable="False"
                                          ItemsSource="{dxe:EnumItemsSource EnumType={x:Type dxmvvm:NotificationPosition}}"
                                          SelectedIndex="0" />
                    </dxlc:LayoutItem>
                    <dxlc:LayoutItem Label="Duration">
                        <dxe:ComboBoxEdit x:Name="customDuration" IsTextEditable="False" SelectedIndex="1">
                            <sys:TimeSpan>00:00:01.0</sys:TimeSpan>
                            <sys:TimeSpan>00:00:06.0</sys:TimeSpan>
                            <sys:TimeSpan>00:00:25.0</sys:TimeSpan>
                        </dxe:ComboBoxEdit>
                    </dxlc:LayoutItem>
                    <dxlc:LayoutItem Label="Maximum on Screen">
                        <dxe:ComboBoxEdit x:Name="maxCount" IsTextEditable="False" SelectedIndex="0">
                            <sys:Int32>3</sys:Int32>
                            <sys:Int32>5</sys:Int32>
                            <sys:Int32>7</sys:Int32>
                            <sys:Int32>10</sys:Int32>
                        </dxe:ComboBoxEdit>
                    </dxlc:LayoutItem>
                    <dxlc:LayoutItem Label="Screen">
                        <dxe:ComboBoxEdit x:Name="screen"
                                          IsTextEditable="False"
                                          ItemsSource="{dxe:EnumItemsSource EnumType={x:Type dxmvvm:NotificationScreen}}"
                                          SelectedIndex="0" />
                    </dxlc:LayoutItem>
                </dxlc:LayoutControl>
            </TabItem>
        </TabControl>
        <helpers:LogControl Grid.Row="1" Grid.Column="1" TextWrapping="Wrap" Margin="0,5,12,12">
            <dxmvvm:Interaction.Behaviors>
                <helpers:LogService />
            </dxmvvm:Interaction.Behaviors>
        </helpers:LogControl>
    </Grid>
</local:WindowsUIDemoModule>