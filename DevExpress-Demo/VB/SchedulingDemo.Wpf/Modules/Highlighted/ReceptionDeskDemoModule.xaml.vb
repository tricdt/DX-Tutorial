Imports DevExpress.Xpf.Core
Imports DevExpress.Xpf.DemoBase
Imports DevExpress.Xpf.Scheduling
Imports System.Collections.Generic
Imports System.Linq
Imports System.Windows

Namespace SchedulingDemo

    <NoAutogeneratedCodeFiles, CodeFiles("Modules/Highlighted/ReceptionDeskDemoModule.xaml", "Modules/Highlighted/ReceptionDeskDemoModule.xaml.(cs)", "Modules/Common/MedicalAppointmentWindow.xaml", "ViewModels/Highlighted/ReceptionDeskDemoViewModel.(cs)", "ViewModels/Common/MedicalAppointmentWindowViewModel.(cs)", "Themes/ReceptionDesk.xaml")>
    Public Partial Class ReceptionDeskDemoModule
        Inherits SchedulingDemoModule

        Public Sub New()
            InitializeComponent()
        End Sub

        Private Sub OnAppointmentWindowShowing(ByVal sender As Object, ByVal e As AppointmentWindowShowingEventArgs)
            e.Window.DataContext = MedicalAppointmentWindowViewModel.Create(e.Appointment, scheduler)
        End Sub

        Private Sub OnDropAppointment(ByVal sender As Object, ByVal e As DropAppointmentEventArgs)
            e.Cancel = e.ConflictedAppointments.Where(Function(x) x.Count > 0).FirstOrDefault() IsNot Nothing
        End Sub

        Private Sub OnStartAppointmentDragFromOutside(ByVal sender As Object, ByVal e As StartAppointmentDragFromOutsideEventArgs)
            If e.Data.GetDataPresent(GetType(IEnumerable(Of Patient))) Then Enumerable.ToList(CType(e.Data.GetData(GetType(IEnumerable(Of Patient))), IEnumerable(Of Patient))).ForEach(Sub(x) e.DragAppointments.Add(CreateAppointment(x)))
        End Sub

        Private Sub OnStartRecordDrag(ByVal sender As Object, ByVal e As StartRecordDragEventArgs)
            e.Data.SetData(GetType(IEnumerable(Of Patient)), e.Records.Cast(Of Patient)())
            e.Handled = True
        End Sub

        Private Function CreateAppointment(ByVal patient As Patient) As AppointmentItem
            Dim result As AppointmentItem = New AppointmentItem()
            result.CustomFields("PatientId") = patient.Id
            result.Subject = patient.Name
            result.StatusId = PaymentStateNotYetBilled.Id
            result.Start = Date.Today
            result.End = result.Start.AddMinutes(20)
            Return result
        End Function

        Private Sub OnCompleteRecordDragDrop(ByVal sender As Object, ByVal e As CompleteRecordDragDropEventArgs)
            e.Handled = True
        End Sub

        Private Sub OnDragRecordOver(ByVal sender As Object, ByVal e As DragRecordOverEventArgs)
            e.Effects = DragDropEffects.Move
            e.Handled = True
        End Sub

        Private Sub OnDropRecord(ByVal sender As Object, ByVal e As DropRecordEventArgs)
            e.Handled = True
        End Sub
    End Class
End Namespace
