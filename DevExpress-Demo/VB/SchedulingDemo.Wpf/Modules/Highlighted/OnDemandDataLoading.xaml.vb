Imports DevExpress.Mvvm.Native
Imports DevExpress.Xpf.DemoBase
Imports DevExpress.Xpf.Scheduling
Imports System
Imports System.Collections.Specialized
Imports System.Windows

Namespace SchedulingDemo

    <NoAutogeneratedCodeFiles, CodeFiles("Modules/Highlighted/OnDemandDataLoading.xaml", "Modules/Highlighted/OnDemandDataLoading.xaml.(cs)", "ViewModels/Highlighted/OnDemandDataLoadingViewModel.(cs)", "Data/OnDemandDataLoading/SchedulingContext.(cs)")>
    Public Partial Class OnDemandDataLoading
        Inherits SchedulingDemoModule

        Public Sub New()
            InitializeComponent()
            AddHandler ModuleLoaded, AddressOf OnModuleLoaded
            AddHandler scheduler.ResourceItems.CollectionChanged, AddressOf OnResourceItemsCollectionChanged
            AddHandler scheduler.AppointmentAdded, Sub(d, e)
                e.Appointments.ForEach(Sub(x) LogChange(x, "added"))
            End Sub
            AddHandler scheduler.AppointmentEdited, Sub(d, e)
                e.Appointments.ForEach(Sub(x) LogChange(x, "edited"))
            End Sub
            AddHandler scheduler.AppointmentRemoved, Sub(d, e)
                e.Appointments.ForEach(Sub(x) LogChange(x, "removed"))
            End Sub
            AddHandler scheduler.AppointmentRestored, Sub(d, e)
                e.Appointments.ForEach(Sub(x) LogChange(x, "restored"))
            End Sub
            AddHandler scheduler.DataSource.FetchAppointments, Sub(d, e) LogFetch(e)
            AddHandler refreshData.Click, AddressOf OnRefreshDataClick
        End Sub

        Private Async Sub LogFetch(ByVal args As FetchDataEventArgs)
            If args.AsyncResult IsNot Nothing Then Await args.AsyncResult
            Dim apptCount As Integer = If(args.Result IsNot Nothing, args.Result.Length, args.AsyncResult.Result.Length)
            Dim intervalStr = args.Interval.ToString("({0:d})-({1:d})", Nothing)
            Dim format = "{0}: {1} appointments fetched"
            logTextEdit.Text += String.Format(format, intervalStr, apptCount) & Environment.NewLine
        End Sub

        Private Sub LogChange(ByVal appt As AppointmentItem, ByVal action As String)
            logTextEdit.Text += String.Format("Appointment '{0}' {1}; changes saved to database", appt.Subject, action) & Environment.NewLine
        End Sub

        Private Sub OnRefreshDataClick(ByVal sender As Object, ByVal e As RoutedEventArgs)
            scheduler.RefreshData(RefreshDataKind.Appointments)
        End Sub

        Private Sub ClearLog(ByVal sender As Object, ByVal e As RoutedEventArgs)
            logTextEdit.Text = String.Empty
        End Sub

        Private Sub OnResourceItemsCollectionChanged(ByVal sender As Object, ByVal e As NotifyCollectionChangedEventArgs)
            For i As Integer = 0 To scheduler.ResourceItems.Count - 1
                scheduler.ResourceItems(i).Visible = i < 2
            Next

            RemoveHandler scheduler.ResourceItems.CollectionChanged, AddressOf OnResourceItemsCollectionChanged
        End Sub

        Private Sub OnModuleLoaded(ByVal sender As Object, ByVal e As RoutedEventArgs)
            scheduler.ShowWaitIndicator = True
        End Sub
    End Class
End Namespace
