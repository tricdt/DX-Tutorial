Imports System.Windows
Imports System.Windows.Controls
Imports System.Windows.Input
Imports DevExpress.Mvvm.UI
Imports DevExpress.Xpf.Charts
Imports DevExpress.Xpf.DemoBase

Namespace ChartsDemo

    <CodeFile("Modules/Highlighted/SeriesPointMoving.xaml"), CodeFile("Modules/Highlighted/SeriesPointMoving.xaml.(cs)"), CodeFile("Modules/Highlighted/SeriesPointMovingViewModel.(cs)"), CodeFile("DataModels/SeriesPointMovingDataModel.(cs)"), NoAutogeneratedCodeFiles>
    Public Partial Class SeriesPointMovingDemo
        Inherits ChartsDemoModule

        Public Sub New()
            InitializeComponent()
        End Sub

        Private Sub OkClick(ByVal sender As Object, ByVal e As RoutedEventArgs)
            flyoutControl.IsOpen = False
        End Sub
    End Class

    Public Class SeriesPointMovingTemplateSelector
        Inherits DataTemplateSelector

        Public Property ProductionTemplate As DataTemplate

        Public Property StockTemplate As DataTemplate

        Public Property DemandTemplate As DataTemplate

        Public Property CostTemplate As DataTemplate

        Public Property IncomeTemplate As DataTemplate

        Public Overrides Function SelectTemplate(ByVal item As Object, ByVal container As DependencyObject) As DataTemplate
            Dim seriesItem As SeriesPointMovingSeriesViewModel = TryCast(item, SeriesPointMovingSeriesViewModel)
            If seriesItem IsNot Nothing Then
                Select Case seriesItem.Name
                    Case "Production"
                        Return ProductionTemplate
                    Case "Stock"
                        Return StockTemplate
                    Case "Demand"
                        Return DemandTemplate
                    Case "Retail Price"
                        Return CostTemplate
                    Case "Income"
                        Return IncomeTemplate
                End Select
            End If

            Return Nothing
        End Function
    End Class

    Public Class MouseToSeriesPointTagEventArgsConverter
        Inherits EventArgsConverterBase(Of MouseEventArgs)

        Protected Overrides Function Convert(ByVal sender As Object, ByVal args As MouseEventArgs) As Object
            Dim chart As ChartControl = TryCast(sender, ChartControl)
            If chart Is Nothing Then Return Nothing
            Dim hitInfo As ChartHitInfo = chart.CalcHitInfo(args.GetPosition(chart))
            If hitInfo.Series Is Nothing OrElse hitInfo.SeriesPoint Is Nothing Then Return Nothing
            Dim series2D As XYSeries2D = CType(hitInfo.Series, XYSeries2D)
            Dim seriesItem As SeriesPointMovingSeriesViewModel = CType(hitInfo.Series.Tag, SeriesPointMovingSeriesViewModel)
            If Equals(seriesItem.Name, "Stock") OrElse Equals(seriesItem.Name, "Income") Then Return Nothing
            Dim mouseDownData As MouseDownData = New MouseDownData()
            mouseDownData.Series = seriesItem
            mouseDownData.CurrentItem = CType(hitInfo.SeriesPoint.Tag, DraggableItem)
            mouseDownData.Chart = chart
            Return mouseDownData
        End Function
    End Class

    Public Class MouseDownData

        Public Property CurrentItem As DraggableItem

        Public Property Series As SeriesPointMovingSeriesViewModel

        Public Property Chart As ChartControl
    End Class

    Public Class MouseToLocationEventArgsConverter
        Inherits EventArgsConverterBase(Of MouseEventArgs)

        Protected Overrides Function Convert(ByVal sender As Object, ByVal args As MouseEventArgs) As Object
            Dim chart As ChartControl = TryCast(sender, ChartControl)
            If chart Is Nothing Then Return Nothing
            Dim hitInfo As ChartHitInfo = chart.CalcHitInfo(args.GetPosition(chart))
            If hitInfo Is Nothing Then Return Nothing
            Dim diagram As XYDiagram2D = CType(chart.Diagram, XYDiagram2D)
            Dim coords As DiagramCoordinates = diagram.PointToDiagram(args.GetPosition(chart))
            Dim moveData As MouseMoveData = New MouseMoveData()
            moveData.IsOnDraggablePoint = False
            If hitInfo.Series IsNot Nothing AndAlso hitInfo.SeriesPoint IsNot Nothing Then
                Dim seriesName As String = CType(hitInfo.Series.Tag, SeriesPointMovingSeriesViewModel).Name
                If Not Equals(seriesName, "Income") AndAlso Not Equals(seriesName, "Stock") Then moveData.IsOnDraggablePoint = True
            End If

            moveData.DiagramNumericalValue = coords.NumericalValue
            If hitInfo.Pane IsNot Nothing Then moveData.Pane = TryCast(hitInfo.Pane.Tag, SeriePointMovingPaneViewModel)
            Return moveData
        End Function
    End Class

    Public Class MouseMoveData

        Public Property DiagramNumericalValue As Double

        Public Property Pane As SeriePointMovingPaneViewModel

        Public Property IsOnDraggablePoint As Boolean
    End Class
End Namespace
