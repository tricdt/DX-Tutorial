Imports System
Imports System.Windows
Imports System.Windows.Data
Imports System.Windows.Input
Imports System.Windows.Media
Imports System.Windows.Media.Animation
Imports DevExpress.Xpf.Charts
Imports DevExpress.Xpf.DemoBase

Namespace ChartsDemo

    <CodeFile("Modules/Highlighted/BoxPlot.xaml"), CodeFile("Modules/Highlighted/BoxPlot.xaml.(cs)"), CodeFile("Modules/Highlighted/BoxPlotViewModel.(cs)"), CodeFile("DataModels/BoxPlotPoint.(cs)"), CodeFile("DataModels/RandomSequenceGenerator.(cs)"), NoAutogeneratedCodeFiles>
    Public Partial Class BoxPlotDemo
        Inherits ChartsDemoModule

        Public Shared ReadOnly ChartPaletteProperty As DependencyProperty = DependencyProperty.Register("ChartPalette", GetType(Palette), GetType(BoxPlotDemo), New PropertyMetadata(AddressOf OnChartPaletteChanged))

        Private Shared Sub OnChartPaletteChanged(ByVal d As DependencyObject, ByVal e As DependencyPropertyChangedEventArgs)
            Dim demo As BoxPlotDemo = TryCast(d, BoxPlotDemo)
            If demo IsNot Nothing Then demo.ColorizeSeries()
        End Sub

        Const Alpha As Byte = 40

        Const InitialVisibleArgsCount As Integer = 7

        Private pointSeries1AnimationCompleted As Boolean

        Private pointSeries2AnimationCompleted As Boolean

        Private ReadOnly Property ViewModel As BoxPlotViewModel
            Get
                Return TryCast(DataContext, BoxPlotViewModel)
            End Get
        End Property

        Public Sub New()
            InitializeComponent()
            Dim myBinding As Binding = New Binding("Palette")
            myBinding.Source = chart
            myBinding.Mode = BindingMode.OneWay
            SetBinding(ChartPaletteProperty, myBinding)
            AddHandler Loaded, Sub(s, e) SetVisualRange()
        End Sub

        Private Sub SetVisualRange()
            Dim diagram As XYDiagram2D = CType(chart.Diagram, XYDiagram2D)
            Dim max As Double = CDbl(diagram.ActualAxisX.ActualWholeRange.ActualMaxValue)
            Dim min As Double = max - InitialVisibleArgsCount
            diagram.ActualAxisX.ActualVisualRange.SetMinMaxValues(min, max)
        End Sub

        Private Sub ColorizeSeries()
            Dim color1 As Color = chart.Palette(0)
            color1 = Color.FromArgb(Alpha, color1.R, color1.G, color1.B)
            Dim brush1 As SolidColorBrush = New SolidColorBrush(color1)
            brush1.Freeze()
            pointSeries1.Brush = brush1
            Dim color2 As Color = chart.Palette(1)
            color1 = Color.FromArgb(Alpha, color2.R, color2.G, color2.B)
            Dim brush2 As SolidColorBrush = New SolidColorBrush(color1)
            brush1.Freeze()
            pointSeries2.Brush = brush2
        End Sub

        Private Sub Pane_MouseMove(ByVal sender As Object, ByVal e As MouseEventArgs)
            e.Handled = True
        End Sub

        Private Sub OnAddNewDataSetClick(ByVal sender As Object, ByVal e As RoutedEventArgs)
            If Not pointSeries1AnimationCompleted OrElse Not pointSeries2AnimationCompleted Then CalculateBoxPlotForLastExperiment()
            pointSeries1AnimationCompleted = False
            pointSeries2AnimationCompleted = False
            pointSeries1.Animate()
            pointSeries2.Animate()
        End Sub

        Private Sub OnPointSeries1AnimationCompleted(ByVal sender As Object, ByVal e As EventArgs)
            pointSeries1AnimationCompleted = True
            If pointSeries2AnimationCompleted Then CalculateBoxPlotForLastExperiment()
        End Sub

        Private Sub OnPointSeries2AnimationCompleted(ByVal sender As Object, ByVal e As EventArgs)
            pointSeries2AnimationCompleted = True
            If pointSeries1AnimationCompleted Then CalculateBoxPlotForLastExperiment()
        End Sub

        Private Sub CalculateBoxPlotForLastExperiment()
            If ViewModel IsNot Nothing Then ViewModel.CalculateBoxPlotForLastExperiment()
        End Sub

        Protected Overrides Sub Show()
            MyBase.Show()
            Dim storyboard1 As Storyboard = CType(pointSeries1.Resources("storyboard"), Storyboard)
            AddHandler storyboard1.Completed, AddressOf OnPointSeries1AnimationCompleted
            Dim storyboard2 As Storyboard = CType(pointSeries2.Resources("storyboard"), Storyboard)
            AddHandler storyboard2.Completed, AddressOf OnPointSeries2AnimationCompleted
        End Sub
    End Class
End Namespace
