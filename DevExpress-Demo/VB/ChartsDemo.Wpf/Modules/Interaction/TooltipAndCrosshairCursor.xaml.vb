Imports System
Imports System.Globalization
Imports System.Windows
Imports System.Windows.Data
Imports System.Windows.Media
Imports DevExpress.Xpf.Charts
Imports DevExpress.Xpf.DemoBase

Namespace ChartsDemo

    <CodeFile("Modules/Interaction/TooltipAndCrosshairCursor.xaml"), CodeFile("Modules/Interaction/TooltipAndCrosshairCursor.xaml.(cs)"), CodeFile("DataModels/DevAVSalesData.cs"), NoAutogeneratedCodeFiles>
    Public Partial Class TooltipAndCrosshairCursorDemo
        Inherits ChartsDemoModule

        Public Sub New()
            InitializeComponent()
        End Sub

        Private Sub ToolTipController_ToolTipOpening(ByVal sender As Object, ByVal e As ChartToolTipEventArgs)
            Dim colorIndex As Integer = e.Series.Points.IndexOf(e.SeriesPoint)
            Dim barColor As Color = e.ChartControl.Palette(colorIndex)
            Dim barBrush As SolidColorBrush = New SolidColorBrush(barColor)
            barBrush.Freeze()
            e.Hint = New TooltipHintItem() With {.SaleItem = TryCast(e.SeriesPoint.Tag, DevAVSaleItem), .Brush = barBrush}
        End Sub
    End Class

    Friend Class TooltipHintItem

        Public Property SaleItem As DevAVSaleItem

        Public Property Brush As SolidColorBrush

        Public Overrides Function ToString() As String
            Return String.Empty
        End Function
    End Class

    Friend Class TooltipPointTemplateConverter
        Inherits DependencyObject
        Implements IValueConverter

        Public Shared ReadOnly StandardTemplateProperty As DependencyProperty = DependencyProperty.Register("StandardTemplate", GetType(DataTemplate), GetType(TooltipPointTemplateConverter), New PropertyMetadata(CType(Nothing, PropertyChangedCallback)))

        Public Property ImageTemplate As DataTemplate

        Public Property StandardTemplate As DataTemplate
            Get
                Return CType(GetValue(StandardTemplateProperty), DataTemplate)
            End Get

            Set(ByVal value As DataTemplate)
                SetValue(StandardTemplateProperty, value)
            End Set
        End Property

        Public Function Convert(ByVal value As Object, ByVal targetType As Type, ByVal parameter As Object, ByVal culture As CultureInfo) As Object Implements IValueConverter.Convert
            Dim selected As String = TryCast(value, String)
            Select Case selected
                Case "Image"
                    Return ImageTemplate
                Case "Text"
                    Return StandardTemplate
                Case Else
                    Return value
            End Select
        End Function

        Public Function ConvertBack(ByVal value As Object, ByVal targetType As Type, ByVal parameter As Object, ByVal culture As CultureInfo) As Object Implements IValueConverter.ConvertBack
            Return value
        End Function
    End Class

    Friend Class TooltipPositionWrapper

        Public Property Position As ToolTipPosition

        Public Property DisplayName As String

        Public Overrides Function ToString() As String
            Return DisplayName
        End Function
    End Class
End Namespace
