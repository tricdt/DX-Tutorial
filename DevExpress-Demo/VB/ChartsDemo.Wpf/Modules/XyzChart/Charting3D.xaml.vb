Imports System
Imports System.Globalization
Imports System.Windows
Imports System.Windows.Media
Imports System.Windows.Media.Effects
Imports DevExpress.Xpf.DemoBase

Namespace ChartsDemo

    <CodeFile("Modules/XyzChart/Charting3D.xaml"), CodeFile("Modules/XyzChart/Charting3D.xaml.(cs)"), CodeFile("DataModels/StarsData.(cs)"), NoAutogeneratedCodeFiles>
    Public Partial Class Charting3dDemo
        Inherits ChartsDemoModule

        Public Sub New()
            InitializeComponent()
        End Sub
    End Class

    Friend Class StarAxisLabelDataToStringConverter
        Inherits ForwardOnlyValueConverter

        Public Overrides Function Convert(ByVal value As Object, ByVal targetType As Type, ByVal parameter As Object, ByVal culture As CultureInfo) As Object
            Dim res As Double = 0
            If Double.TryParse(TryCast(value, String), NumberStyles.Float, CultureInfo.InvariantCulture, res) Then Return If(Math.Abs(res) > 1000, String.Format("{0}k", res * 0.001), res.ToString())
            Return value
        End Function
    End Class

    Friend Class StarEffect
        Inherits ShaderEffect

        Public Shared ReadOnly InputProperty As DependencyProperty = RegisterPixelShaderSamplerProperty("Input", GetType(StarEffect), 0)

        Public Shared ReadOnly TimeProperty As DependencyProperty = DependencyProperty.Register("Time", GetType(Double), GetType(StarEffect), New UIPropertyMetadata(0R, PixelShaderConstantCallback(0)))

        Public Shared ReadOnly WaveSizeProperty As DependencyProperty = DependencyProperty.Register("WaveSize", GetType(Double), GetType(StarEffect), New UIPropertyMetadata(196R, PixelShaderConstantCallback(1)))

        Public Shared ReadOnly CenterPointProperty As DependencyProperty = DependencyProperty.Register("CenterPoint", GetType(Point), GetType(StarEffect), New UIPropertyMetadata(New Point(0.5R, 0.5R), PixelShaderConstantCallback(2)))

        Public Shared ReadOnly InnerRadiusProperty As DependencyProperty = DependencyProperty.Register("InnerRadius", GetType(Double), GetType(StarEffect), New UIPropertyMetadata(0.2R, PixelShaderConstantCallback(3)))

        Public Shared ReadOnly OuterRadiusProperty As DependencyProperty = DependencyProperty.Register("OuterRadius", GetType(Double), GetType(StarEffect), New UIPropertyMetadata(0.4R, PixelShaderConstantCallback(4)))

        Public Shared ReadOnly MagnificationAmountProperty As DependencyProperty = DependencyProperty.Register("MagnificationAmount", GetType(Double), GetType(StarEffect), New UIPropertyMetadata(1R, PixelShaderConstantCallback(5)))

        Public Shared ReadOnly AspectRatioProperty As DependencyProperty = DependencyProperty.Register("AspectRatio", GetType(Double), GetType(StarEffect), New UIPropertyMetadata(1.5R, PixelShaderConstantCallback(6)))

        Public Shared ReadOnly BlurAmountProperty As DependencyProperty = DependencyProperty.Register("BlurAmount", GetType(Double), GetType(StarEffect), New UIPropertyMetadata(2R, PixelShaderConstantCallback(7)))

        Public Shared ReadOnly MinValueProperty As DependencyProperty = DependencyProperty.Register("MinValue", GetType(Double), GetType(StarEffect), New UIPropertyMetadata(0R, PixelShaderConstantCallback(8)))

        Public Shared ReadOnly MaxValueProperty As DependencyProperty = DependencyProperty.Register("MaxValue", GetType(Double), GetType(StarEffect), New UIPropertyMetadata(0.5R, PixelShaderConstantCallback(9)))

        Public Sub New()
            Dim pixelShader As PixelShader = New PixelShader()
            pixelShader.UriSource = New Uri("/ChartsDemo;component/Data/Star.ps", UriKind.Relative)
            Me.PixelShader = pixelShader
            UpdateShaderValue(InputProperty)
            UpdateShaderValue(TimeProperty)
            UpdateShaderValue(WaveSizeProperty)
            UpdateShaderValue(CenterPointProperty)
            UpdateShaderValue(InnerRadiusProperty)
            UpdateShaderValue(OuterRadiusProperty)
            UpdateShaderValue(MagnificationAmountProperty)
            UpdateShaderValue(AspectRatioProperty)
            UpdateShaderValue(BlurAmountProperty)
            UpdateShaderValue(MinValueProperty)
            UpdateShaderValue(MaxValueProperty)
        End Sub

        Public Property Input As Brush
            Get
                Return CType(GetValue(InputProperty), Brush)
            End Get

            Set(ByVal value As Brush)
                SetValue(InputProperty, value)
            End Set
        End Property

        Public Property Time As Double
            Get
                Return CDbl(GetValue(TimeProperty))
            End Get

            Set(ByVal value As Double)
                SetValue(TimeProperty, value)
            End Set
        End Property

        Public Property WaveSize As Double
            Get
                Return CDbl(GetValue(WaveSizeProperty))
            End Get

            Set(ByVal value As Double)
                SetValue(WaveSizeProperty, value)
            End Set
        End Property

        Public Property CenterPoint As Point
            Get
                Return CType(GetValue(CenterPointProperty), Point)
            End Get

            Set(ByVal value As Point)
                SetValue(CenterPointProperty, value)
            End Set
        End Property

        Public Property InnerRadius As Double
            Get
                Return CDbl(GetValue(InnerRadiusProperty))
            End Get

            Set(ByVal value As Double)
                SetValue(InnerRadiusProperty, value)
            End Set
        End Property

        Public Property OuterRadius As Double
            Get
                Return CDbl(GetValue(OuterRadiusProperty))
            End Get

            Set(ByVal value As Double)
                SetValue(OuterRadiusProperty, value)
            End Set
        End Property

        Public Property MagnificationAmount As Double
            Get
                Return CDbl(GetValue(MagnificationAmountProperty))
            End Get

            Set(ByVal value As Double)
                SetValue(MagnificationAmountProperty, value)
            End Set
        End Property

        Public Property AspectRatio As Double
            Get
                Return CDbl(GetValue(AspectRatioProperty))
            End Get

            Set(ByVal value As Double)
                SetValue(AspectRatioProperty, value)
            End Set
        End Property

        Public Property BlurAmount As Double
            Get
                Return CDbl(GetValue(BlurAmountProperty))
            End Get

            Set(ByVal value As Double)
                SetValue(BlurAmountProperty, value)
            End Set
        End Property

        Public Property MinValue As Double
            Get
                Return CDbl(GetValue(MinValueProperty))
            End Get

            Set(ByVal value As Double)
                SetValue(MinValueProperty, value)
            End Set
        End Property

        Public Property MaxValue As Double
            Get
                Return CDbl(GetValue(MaxValueProperty))
            End Get

            Set(ByVal value As Double)
                SetValue(MaxValueProperty, value)
            End Set
        End Property
    End Class
End Namespace
