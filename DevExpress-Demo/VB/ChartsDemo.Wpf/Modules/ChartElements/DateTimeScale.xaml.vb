Imports System
Imports System.ComponentModel
Imports System.Globalization
Imports System.Windows
Imports System.Windows.Controls
Imports System.Windows.Data
Imports DevExpress.Xpf.Charts
Imports DevExpress.Xpf.DemoBase

Namespace ChartsDemo

    <CodeFile("Modules/ChartElements/DateTimeScale.xaml"), CodeFile("Modules/ChartElements/DateTimeScale.xaml.(cs)"), CodeFile("DataModels/FinancialDataWithBreaksGenerator.(cs)"), CodeFile("Modules/ChartElements/DateTimeScaleViewModel.(cs)"), CodeFile("DataModels/FinancialDataPoint.(cs)"), NoAutogeneratedCodeFiles>
    Public Partial Class DateTimeScaleDemo
        Inherits ChartsDemoModule

        Public Sub New()
            InitializeComponent()
        End Sub
    End Class

    Friend Class ScaleModeToScaleOptionsConverter
        Implements IValueConverter

        Public Property AutomaticDateTimeScaleOptions As AutomaticDateTimeScaleOptions

        Public Property ManualDateTimeScaleOptions As ManualDateTimeScaleOptions

        Public Property ContinuousDateTimeScaleOptions As ContinuousDateTimeScaleOptions

        Public Function Convert(ByVal value As Object, ByVal targetType As Type, ByVal parameter As Object, ByVal culture As CultureInfo) As Object Implements IValueConverter.Convert
            If value.GetType() IsNot GetType(ScaleMode) Then Return value
            Dim scaleMode As ScaleMode = CType(value, ScaleMode)
            Select Case scaleMode
                Case ScaleMode.Automatic
                    Return AutomaticDateTimeScaleOptions
                Case ScaleMode.Manual
                    Return ManualDateTimeScaleOptions
                Case ScaleMode.Continuous
                    Return ContinuousDateTimeScaleOptions
                Case Else
                    Throw New InvalidEnumArgumentException(String.Format("The {0} enum value is unknown", scaleMode))
            End Select
        End Function

        Public Function ConvertBack(ByVal value As Object, ByVal targetType As Type, ByVal parameter As Object, ByVal culture As CultureInfo) As Object Implements IValueConverter.ConvertBack
            If Not targetType Is GetType(ScaleMode) Then Return value
            If TypeOf value Is AutomaticDateTimeScaleOptions Then Return ScaleMode.Automatic
            If TypeOf value Is ManualDateTimeScaleOptions Then Return ScaleMode.Manual
            If TypeOf value Is ContinuousDateTimeScaleOptions Then Return ScaleMode.Continuous
            Throw New ArgumentException("An instance of the AutomaticDateTimeScaleOptions, ManualDateTimeScaleOptions or ContinuousDateTimeScaleOptions class is expected.")
        End Function
    End Class

    Friend Class DateTimeScaleSeriesTemplateSelector
        Inherits DataTemplateSelector

        Public Property BarSeriesTemplate As DataTemplate

        Public Property StockSeriesTemplate As DataTemplate

        Public Overrides Function SelectTemplate(ByVal item As Object, ByVal container As DependencyObject) As DataTemplate
            Dim seriesItem As DateTimeScaleSeriesViewModel = TryCast(item, DateTimeScaleSeriesViewModel)
            Select Case seriesItem.SeriesView
                Case SeriesView.Volume
                    Return BarSeriesTemplate
                Case SeriesView.Price
                    Return StockSeriesTemplate
                Case Else
                    Throw New InvalidEnumArgumentException(String.Format("The {0} enum value is incorrect", seriesItem.SeriesView))
            End Select
        End Function
    End Class

    Friend Class ArgumentToDateTimeMeasureUnitConverter
        Inherits ForwardOnlyValueConverter

        Public Overrides Function Convert(ByVal value As Object, ByVal targetType As Type, ByVal parameter As Object, ByVal culture As CultureInfo) As Object
            If value.GetType() Is GetType(ArgumentMeasureUnit) AndAlso targetType Is GetType(DateTimeMeasureUnit) Then
                Return CType(value, DateTimeMeasureUnit)
            Else
                Return value
            End If
        End Function
    End Class
End Namespace
