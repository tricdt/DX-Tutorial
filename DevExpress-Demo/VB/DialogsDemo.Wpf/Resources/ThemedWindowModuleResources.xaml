<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:local="clr-namespace:DialogsDemo"
                    xmlns:dxr="http://schemas.devexpress.com/winfx/2008/xaml/ribbon"
                    xmlns:dx="http://schemas.devexpress.com/winfx/2008/xaml/core"
                    xmlns:dxe="http://schemas.devexpress.com/winfx/2008/xaml/editors"
                    xmlns:dxb="http://schemas.devexpress.com/winfx/2008/xaml/bars"
                    xmlns:dxmvvm="http://schemas.devexpress.com/winfx/2008/xaml/mvvm"
                    xmlns:dxlc="http://schemas.devexpress.com/winfx/2008/xaml/layoutcontrol">


    <ControlTemplate x:Key="optionsTemplate">
        <dxlc:LayoutControl Orientation="Vertical" ItemSpace="5" Padding="0">
            <GroupBox Header="Options" VerticalAlignment="Top">
                <dxlc:LayoutGroup Orientation="Vertical" View="Group">
                    <dxe:CheckEdit Content="Pin window" IsChecked="{Binding PinWindow, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
                    <dxe:CheckEdit Content="Show title" IsChecked="{Binding ShowTitle, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
                    <dxe:CheckEdit Content="Use glow colors" IsChecked="{Binding UseGlowColors, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />

                    <dxlc:LayoutItem Label="Title Alignment:"
                                     Visibility="{DXBinding '@c.WindowKind == $dx:WindowKind.Normal ? $Visibility.Visible : $Visibility.Collapsed'}">
                        <dxe:ComboBoxEdit ItemsSource="{dxe:EnumItemsSource EnumType={x:Type dx:WindowTitleAlignment}}"
                                          EditValue="{Binding TitleAlignment, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                          IsTextEditable="False"
                                          ShowSizeGrip="False" />
                    </dxlc:LayoutItem>

                    <dxlc:LayoutItem Label="Window Icon:" VerticalAlignment="Top">
                        <dxe:PopupImageEdit Stretch="None" EditValue="{Binding Icon, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
                    </dxlc:LayoutItem>

                    <dxlc:LayoutItem Label="Glow Color:" VerticalAlignment="Top">
                        <dxe:PopupColorEdit EditValue="{Binding ActiveGlowColor, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, Converter={dxmvvm:BrushToColorConverter}}"/>
                    </dxlc:LayoutItem>

                    <dxlc:LayoutItem Label="Window Kind:" VerticalAlignment="Top">
                        <dxe:ComboBoxEdit ItemsSource="{dxe:EnumItemsSource EnumType={x:Type dx:WindowKind}}"
                                          EditValue="{Binding WindowKind, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                          IsTextEditable="False"
                                          ShowSizeGrip="False" />
                    </dxlc:LayoutItem>
                </dxlc:LayoutGroup>
            </GroupBox>
            <GroupBox Header="Header Items" VerticalAlignment="Top">
                <dxlc:LayoutGroup Orientation="Vertical" View="Group">
                    <Button Content="Add custom item" Command="{Binding AddHeaderItemCommand}" Margin="0,2,0,2" />
                    <Button Content="Remove custom item" Command="{Binding RemoveHeaderItemCommand}" Margin="0,2,0,2" />
                    <Button Content="{DXBinding '@c.ShowPredefinedItems? `Hide predefined items` : `Show predefined items`'}"
                            Command="{Binding TogglePredefinedItemsVisibilityCommand}"
                            Margin="0,2,0,2" />
                </dxlc:LayoutGroup>
            </GroupBox>
        </dxlc:LayoutControl>
    </ControlTemplate>
    <ControlTemplate x:Key="editorTemplate">
        <DockPanel LastChildFill="True">
            <dxb:BarContainerControl DockPanel.Dock="Top" x:Name="barContainer">
                <dxb:MainMenuControl>
                    <dxb:BarButtonItem Glyph="/DevExpress.Images.v22.2;component/SvgImages/Icon Builder/Actions_Undo.svg"
                                       Command="Undo"
                                       CommandTarget="{Binding ElementName=TextEdit}" />
                    <dxb:BarButtonItem Glyph="/DevExpress.Images.v22.2;component/SvgImages/Icon Builder/Actions_Redo.svg"
                                       Command="Redo"
                                       CommandTarget="{Binding ElementName=TextEdit}" />
                    <dxb:BarItemSeparator />
                    <dxb:BarButtonItem Content="Cut"
                                       Glyph="/DevExpress.Images.v22.2;component/SvgImages/RichEdit/Cut.svg"
                                       LargeGlyph="/DevExpress.Images.v22.2;component/SvgImages/RichEdit/Cut.svg"
                                       Command="Cut"
                                       CommandTarget="{Binding ElementName=TextEdit}" />
                    <dxb:BarButtonItem Content="Copy"
                                       Glyph="/DevExpress.Images.v22.2;component/SvgImages/RichEdit/Copy.svg"
                                       LargeGlyph="/DevExpress.Images.v22.2;component/SvgImages/RichEdit/Copy.svg"
                                       Command="Copy"
                                       CommandTarget="{Binding ElementName=TextEdit}" />
                    <dxb:BarButtonItem Content="Paste"
                                       Glyph="/DevExpress.Images.v22.2;component/SvgImages/Edit/Paste.svg"
                                       LargeGlyph="/DevExpress.Images.v22.2;component/SvgImages/Edit/Paste.svg"
                                       Command="Paste"
                                       CommandTarget="{Binding ElementName=TextEdit}" />
                    <dxb:BarButtonItem Content="Select All"
                                       Glyph="/DevExpress.Images.v22.2;component/SvgImages/PDF Viewer/SelectAll.svg"
                                       LargeGlyph="/DevExpress.Images.v22.2;component/SvgImages/PDF Viewer/SelectAll.svg"
                                       Command="SelectAll"
                                       CommandTarget="{Binding ElementName=TextEdit}" />
                </dxb:MainMenuControl>
            </dxb:BarContainerControl>
            <dxe:TextEdit x:Name="TextEdit"
                          DockPanel.Dock="Bottom"
                          TextWrapping="Wrap"
                          HorizontalContentAlignment="Stretch"
                          VerticalContentAlignment="Stretch" />
        </DockPanel>
    </ControlTemplate>
    <DataTemplate DataType="{x:Type local:SimpleThemedWindowContentModel}">
        <Control Template="{StaticResource editorTemplate}" dxb:BarNameScope.IsScopeOwner="True">
            <dxmvvm:Interaction.Behaviors>
                <dxb:ControllerBehavior>
                    <dxb:ControllerBehavior.Triggers>
                        <dxb:ActionTrigger Event="{x:Static Control.LoadedEvent}" ExecuteOnce="True" />
                    </dxb:ControllerBehavior.Triggers>
                    <dxb:Bar DataContext="{Binding RootViewModel}" dxb:CollectionAction.ContainerName="barContainer">
                        <dxb:BarEditItem Content="Pin Window"
                                         EditValue="{Binding PinWindow, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                         EditSettings="{dxe:CheckSettings}" />
                        <dxb:BarEditItem Content="Show title"
                                         EditValue="{Binding ShowTitle, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                         EditSettings="{dxe:CheckSettings}" />
                        <dxb:BarItemSeparator />
                        <dxb:BarEditItem Content="Title Alignment"
                                         EditWidth="100"
                                         EditValue="{Binding TitleAlignment, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                         EditSettings="{dxe:ComboBoxSettings ItemsSource={dxe:EnumItemsSource EnumType={x:Type dx:WindowTitleAlignment}}, IsTextEditable=False, ShowSizeGrip=False}" />
                        <dxb:BarEditItem Content="Window Kind"
                                         EditWidth="100"
                                         EditValue="{Binding WindowKind, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                         EditSettings="{dxe:ComboBoxSettings ItemsSource={dxe:EnumItemsSource EnumType={x:Type dx:WindowKind}}, IsTextEditable=False, ShowSizeGrip=False}" />
                        <dxb:BarItemSeparator />
                        <dxb:BarSplitButtonItem Glyph="{Binding Icon}" Content="Icon" RibbonStyle="Large">
                            <dxb:BarSplitButtonItem.GlyphTemplate>
                                <DataTemplate>
                                    <dx:DXImage Source="{Binding Icon}" Stretch="Uniform" MaxWidth="32" MaxHeight="32" HorizontalAlignment="Center" VerticalAlignment="Center" />
                                </DataTemplate>
                            </dxb:BarSplitButtonItem.GlyphTemplate>
                            <dxb:BarSplitButtonItem.PopupControl>
                                <dxb:PopupControlContainer Width="200" Height="300">
                                    <dxe:ImageEdit EditValue="{Binding Icon, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" ShowMenuMode="Always" Stretch="None" />
                                </dxb:PopupControlContainer>
                            </dxb:BarSplitButtonItem.PopupControl>
                        </dxb:BarSplitButtonItem>
                    </dxb:Bar>
                </dxb:ControllerBehavior>
            </dxmvvm:Interaction.Behaviors>
        </Control>
    </DataTemplate>
    <DataTemplate DataType="{x:Type local:RibbonThemedWindowContentModel}">
        <DockPanel LastChildFill="True" dxb:BarNameScope.IsScopeOwner="True">
            <dxr:RibbonControl DataContext="{Binding RootViewModel}" DockPanel.Dock="Top" RibbonStyle="Office2010" PageCategoryAlignment="Right">
                <dxr:RibbonControl.ToolbarItems>
                    <dxb:BarButtonItem Glyph="/DevExpress.Images.v22.2;component/SvgImages/Icon Builder/Actions_Undo.svg" Command="Undo" CommandTarget="{Binding ElementName=TextEdit}" />
                    <dxb:BarButtonItem Glyph="/DevExpress.Images.v22.2;component/SvgImages/Icon Builder/Actions_Redo.svg" Command="Redo" CommandTarget="{Binding ElementName=TextEdit}" />
                </dxr:RibbonControl.ToolbarItems>
                <dxr:RibbonPage Caption="Home">
                    <dxr:RibbonPageGroup Caption="Clipboard">
                        <dxb:BarButtonItem Content="Cut"
                                           Glyph="/DevExpress.Images.v22.2;component/SvgImages/RichEdit/Cut.svg"
                                           LargeGlyph="/DevExpress.Images.v22.2;component/SvgImages/RichEdit/Cut.svg"
                                           Command="Cut"
                                           CommandTarget="{Binding ElementName=TextEdit}" />
                        <dxb:BarButtonItem Content="Copy"
                                           Glyph="/DevExpress.Images.v22.2;component/SvgImages/RichEdit/Copy.svg"
                                           LargeGlyph="/DevExpress.Images.v22.2;component/SvgImages/RichEdit/Copy.svg"
                                           Command="Copy"
                                           CommandTarget="{Binding ElementName=TextEdit}" />
                        <dxb:BarButtonItem Content="Paste"
                                           Glyph="/DevExpress.Images.v22.2;component/SvgImages/Edit/Paste.svg"
                                           LargeGlyph="/DevExpress.Images.v22.2;component/SvgImages/Edit/Paste.svg"
                                           Command="Paste"
                                           CommandTarget="{Binding ElementName=TextEdit}" />
                        <dxb:BarButtonItem Content="Select All"
                                           Glyph="/DevExpress.Images.v22.2;component/SvgImages/PDF Viewer/SelectAll.svg"
                                           LargeGlyph="/DevExpress.Images.v22.2;component/SvgImages/PDF Viewer/SelectAll.svg"
                                           Command="SelectAll"
                                           CommandTarget="{Binding ElementName=TextEdit}" />
                    </dxr:RibbonPageGroup>
                </dxr:RibbonPage>
                <dxr:RibbonPageCategory Caption="Appearance">
                    <dxr:RibbonPage Caption="Appearance">
                        <dxr:RibbonPageGroup Caption="Appearance Settings">
                            <dxb:BarEditItem Content="Pin Window"
                                             EditValue="{Binding PinWindow, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                             EditSettings="{dxe:CheckSettings}" />
                            <dxb:BarEditItem Content="Show title"
                                             EditValue="{Binding ShowTitle, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                             EditSettings="{dxe:CheckSettings}" />
                            <dxb:BarItemSeparator />
                            <dxb:BarEditItem Content="Title Alignment"
                                             EditWidth="100"
                                             EditValue="{Binding TitleAlignment, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                             EditSettings="{dxe:ComboBoxSettings ItemsSource={dxe:EnumItemsSource EnumType={x:Type dx:WindowTitleAlignment}}, IsTextEditable=False, ShowSizeGrip=False}" />
                            <dxb:BarEditItem Content="Window Kind"
                                             EditWidth="100"
                                             EditValue="{Binding WindowKind, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                             EditSettings="{dxe:ComboBoxSettings ItemsSource={dxe:EnumItemsSource EnumType={x:Type dx:WindowKind}}, IsTextEditable=False, ShowSizeGrip=False}" />
                            <dxb:BarItemSeparator />
                            <dxb:BarSplitButtonItem LargeGlyph="{Binding Icon}" Content="Icon" RibbonStyle="Large">
                                <dxb:BarSplitButtonItem.GlyphTemplate>
                                    <DataTemplate>
                                        <dx:DXImage Source="{Binding Icon}" Stretch="None" MaxWidth="32" MaxHeight="32" HorizontalAlignment="Center" VerticalAlignment="Center" />
                                    </DataTemplate>
                                </dxb:BarSplitButtonItem.GlyphTemplate>
                                <dxb:BarSplitButtonItem.PopupControl>
                                    <dxb:PopupControlContainer Width="200" Height="300">
                                        <dxe:ImageEdit EditValue="{Binding Icon, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" ShowMenuMode="Always" Stretch="None" />
                                    </dxb:PopupControlContainer>
                                </dxb:BarSplitButtonItem.PopupControl>
                            </dxb:BarSplitButtonItem>
                        </dxr:RibbonPageGroup>
                    </dxr:RibbonPage>
                </dxr:RibbonPageCategory>
            </dxr:RibbonControl>
            <dxe:TextEdit x:Name="TextEdit"
                          DockPanel.Dock="Bottom"
                          TextWrapping="Wrap"
                          HorizontalContentAlignment="Stretch"
                          VerticalContentAlignment="Stretch" />
        </DockPanel>
    </DataTemplate>
    <DataTemplate DataType="{x:Type local:TabbedThemedWindowContentModel}">
        <dx:DXTabControl TabContentCacheMode="CacheAllTabs">
            <dx:DXTabItem Header="Notepad">
                <Control Template="{StaticResource editorTemplate}" dxb:BarNameScope.IsScopeOwner="True" />
            </dx:DXTabItem>
            <dx:DXTabItem Header="Appearance">
                <Control Template="{StaticResource optionsTemplate}"
                         HorizontalAlignment="Center"
                         VerticalAlignment="Center"
                         DataContext="{Binding RootViewModel}" />
            </dx:DXTabItem>
        </dx:DXTabControl>
    </DataTemplate>
    <Style x:Key="WindowTitleEditor" TargetType="{x:Type dx:HeaderItemControl}">
        <Setter Property="ShowBorder" Value="False" />
        <Setter Property="Visibility" Value="{Binding IsVisible, Converter={dxmvvm:BooleanToVisibilityConverter}}" />
        <Setter Property="ContentTemplate">
            <Setter.Value>
                <DataTemplate>
                    <dxe:TextEdit EditValue="{Binding Title, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" Width="100" NullText="Insert title..." />
                </DataTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="HelpHeaderItem" TargetType="{x:Type dx:HeaderItemControl}">
        <Setter Property="Command" Value="{Binding HelpCommand}" />
        <Setter Property="ToolTip" Value="DevExpress on the Web" />
        <Setter Property="Visibility" Value="{Binding IsVisible, Converter={dxmvvm:BooleanToVisibilityConverter}}" />
        <Setter Property="ContentTemplate">
            <Setter.Value>
                <DataTemplate>
                    <dx:DXImage Source="/DevExpress.Images.v22.2;component/SvgImages/Icon Builder/Actions_Info.svg"
                                dxb:ImageColorizer.IsEnabled="True"
                                Width="16"
                                Height="16"
                                dxb:ImageColorizer.Color="{Binding Path=(TextElement.Foreground).Color, RelativeSource={RelativeSource Self}}"
                                Stretch="Fill" />
                </DataTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="PinHeaderItem" TargetType="{x:Type dx:HeaderItemControl}">
        <Setter Property="Command" Value="{Binding PinCommand}" />
        <Setter Property="ToolTip" Value="Pin Window" />
        <Setter Property="Visibility" Value="{Binding IsVisible, Converter={dxmvvm:BooleanToVisibilityConverter}}" />
        <Setter Property="ContentTemplate">
            <Setter.Value>
                <DataTemplate>
                    <dx:DXImage Source="/DevExpress.Images.v22.2;component/SvgImages/RichEdit/Hyperlink.svg"
                                dxb:ImageColorizer.IsEnabled="True"
                                Width="16"
                                Height="16"
                                dxb:ImageColorizer.Color="{Binding Path=(TextElement.Foreground).Color, RelativeSource={RelativeSource Self}}"
                                Stretch="Fill" />
                </DataTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="CustomHeaderItem" TargetType="{x:Type dx:HeaderItemControl}">
        <Setter Property="Content" Value="{Binding Content}" />
        <Setter Property="Command" Value="{Binding ClickCommand}" />
    </Style>
</ResourceDictionary>