<local:EditorsDemoModule x:Class="EditorsDemo.BindingValidationModule"
                         xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                         xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                         xmlns:dx="http://schemas.devexpress.com/winfx/2008/xaml/core"
                         xmlns:dxe="http://schemas.devexpress.com/winfx/2008/xaml/editors"
                         xmlns:local="clr-namespace:EditorsDemo">

    <UserControl.Resources>
        <Thickness x:Key="Height" Left="0" Top="4" Right="0" Bottom="0"/>
    </UserControl.Resources>

    <StackPanel Margin="12,60,12,12" MaxWidth="350"
                x:Name="validationContainer"
                dxe:ValidationService.IsValidationContainer="True"
                dxe:ValidationService.AllowAccessibilityAlerts="True">
        <GroupBox Header="Login Information">
            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition/>
                    <ColumnDefinition/>
                </Grid.ColumnDefinitions>
                <Grid.RowDefinitions>
                    <RowDefinition/>
                    <RowDefinition/>
                    <RowDefinition/>
                </Grid.RowDefinitions>
                <TextBlock Text="Login:" x:Name="loginLabel"/>
                <dxe:TextEdit Grid.Column="1"
                              InvalidValueBehavior="AllowLeaveEditor"
                              EditValue="{Binding Login, ValidatesOnDataErrors=True, UpdateSourceTrigger=PropertyChanged}"
                              AutomationProperties.LabeledBy="{Binding ElementName=loginLabel}"/>
                <TextBlock Margin="{StaticResource Height}" Grid.Row="1" Text="E-mail:" x:Name="emailLabel"/>
                <dxe:TextEdit Margin="{StaticResource Height}" Grid.Column="1" Grid.Row="1"
                              InvalidValueBehavior="AllowLeaveEditor"
                              EditValue="{Binding Mail, ValidatesOnDataErrors=True, UpdateSourceTrigger=PropertyChanged}"
                              EditValueChanged="OnMailChanged"
                              x:Name="txtMail"
                              MaskType="RegEx"
                              Mask="[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\.[a-zA-Z]{2,4}"
                              MaskIgnoreBlank="False"
                              AutomationProperties.LabeledBy="{Binding ElementName=emailLabel}"/>
                <TextBlock Margin="{StaticResource Height}" Grid.Row="2" Text="Confirm e-mail:" x:Name="confirmEmailLabel"/>
                <dxe:TextEdit Margin="{StaticResource Height}" Grid.Column="1" Grid.Row="2"
                              InvalidValueBehavior="AllowLeaveEditor"
                              EditValue="{Binding ConfirmMail, ValidatesOnDataErrors=True, UpdateSourceTrigger=PropertyChanged}"
                              EditValueChanged="OnConfirmMailChanged"
                              x:Name="txtConfirmMail"
                              MaskType="RegEx"
                              Mask="[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\.[a-zA-Z]{2,4}"
                              MaskIgnoreBlank="False"
                              AutomationProperties.LabeledBy="{Binding ElementName=confirmEmailLabel}"/>
            </Grid>
        </GroupBox>
        <GroupBox Margin="0,12,0,0" Header="Contact Information">
            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition/>
                    <ColumnDefinition/>
                </Grid.ColumnDefinitions>
                <Grid.RowDefinitions>
                    <RowDefinition/>
                    <RowDefinition/>
                    <RowDefinition/>
                    <RowDefinition/>
                    <RowDefinition/>
                    <RowDefinition/>
                </Grid.RowDefinitions>
                <TextBlock Text="First name:" x:Name="firstNameLabel"/>
                <dxe:TextEdit Grid.Column="1" InvalidValueBehavior="AllowLeaveEditor"
                              AutomationProperties.LabeledBy="{Binding ElementName=firstNameLabel}">
                    <dxe:TextEdit.EditValue>
                        <Binding Path="FirstName" UpdateSourceTrigger="PropertyChanged">
                            <Binding.ValidationRules>
                                <local:EmptyStringValidationRule/>
                            </Binding.ValidationRules>
                        </Binding>
                    </dxe:TextEdit.EditValue>
                </dxe:TextEdit>
                <TextBlock Margin="{StaticResource Height}" Grid.Row="1" Text="Last name:" x:Name="lastNameLabel"/>
                <dxe:TextEdit Margin="{StaticResource Height}" Grid.Column="1" Grid.Row="1" InvalidValueBehavior="AllowLeaveEditor"
                              AutomationProperties.LabeledBy="{Binding ElementName=lastNameLabel}">
                    <dxe:TextEdit.EditValue>
                        <Binding Path="LastName" UpdateSourceTrigger="PropertyChanged">
                            <Binding.ValidationRules>
                                <local:EmptyStringValidationRule/>
                            </Binding.ValidationRules>
                        </Binding>
                    </dxe:TextEdit.EditValue>
                </dxe:TextEdit>
                <TextBlock Margin="0,12" Grid.Row="2" Text="Age:" x:Name="ageLabel"/>
                <dxe:SpinEdit Margin="0,12" Grid.Column="1" Grid.Row="2"
                              InvalidValueBehavior="AllowLeaveEditor"
                              EditValue="{Binding Age, ValidatesOnDataErrors=True, UpdateSourceTrigger=PropertyChanged}"
                              IsFloatValue="False"
                              MinValue="20"
                              MaxValue="201"
                              AutomationProperties.LabeledBy="{Binding ElementName=ageLabel}"/>
                <TextBlock Grid.Row="3" Text="Card type:" x:Name="cardTypeLabel"/>
                <dxe:ComboBoxEdit Grid.Column="1" Grid.Row="3"
                                  InvalidValueBehavior="AllowLeaveEditor"
                                  EditValue="{Binding CardType, ValidatesOnDataErrors=True, UpdateSourceTrigger=PropertyChanged}"
                                  ItemsSource="{x:Static local:ValidationViewModelBase.Cards}"
                                  DisplayMember="DisplayName"
                                  ValueMember="Name"
                                  IsTextEditable="False"
                                  SelectedIndex="0"
                                  SelectedIndexChanged="OnCardTypeChanged"
                                  AutomationProperties.LabeledBy="{Binding ElementName=cardTypeLabel}"/>
                <TextBlock Margin="{StaticResource Height}" Grid.Row="4" Text="Card number:" x:Name="cardNumberLabel"/>
                <dxe:TextEdit Margin="{StaticResource Height}" Grid.Column="1" Grid.Row="4"
                              InvalidValueBehavior="AllowLeaveEditor"
                              EditValue="{Binding CardNumber, ValidatesOnDataErrors=True, UpdateSourceTrigger=PropertyChanged}"
                              x:Name="txtCardNumber"
                              MaskType="RegEx"
                              Mask="[0-9]*"
                              MaskShowPlaceHolders="False"
                              MaskUseAsDisplayFormat="True"
                              AutomationProperties.LabeledBy="{Binding ElementName=cardNumberLabel}"/>
                <TextBlock Margin="{StaticResource Height}" Grid.Row="5" Text="Card exp. date:" x:Name="cardExpDateLabel"/>
                <dxe:DateEdit Margin="{StaticResource Height}" Grid.Column="1" Grid.Row="5"
                              InvalidValueBehavior="AllowLeaveEditor"
                              DateTime="{Binding CardExpDate, ValidatesOnDataErrors=True, UpdateSourceTrigger=PropertyChanged}"
                              AllowNullInput="false"
                              AutomationProperties.LabeledBy="{Binding ElementName=cardExpDateLabel}"/>
            </Grid>
        </GroupBox>
        <Button Margin="0,12,0,0"
                Width="100"
                Content="Join"
                Click="OnClick"
                IsEnabled="{Binding Path=(dxe:ValidationService.HasValidationError), ElementName=validationContainer, Converter={dx:NegationConverter}}"/>
    </StackPanel>
</local:EditorsDemoModule>