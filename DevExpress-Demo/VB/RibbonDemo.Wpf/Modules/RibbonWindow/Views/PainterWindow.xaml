<dx:ThemedWindow x:Class="RibbonDemo.PainterWindow"
                 xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                 xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                 xmlns:dxr="http://schemas.devexpress.com/winfx/2008/xaml/ribbon"
                 xmlns:dxb="http://schemas.devexpress.com/winfx/2008/xaml/bars"
                 xmlns:dxe="http://schemas.devexpress.com/winfx/2008/xaml/editors"
                 xmlns:dxmvvm="http://schemas.devexpress.com/winfx/2008/xaml/mvvm"
                 xmlns:sys="clr-namespace:System;assembly=mscorlib"
                 xmlns:local="clr-namespace:RibbonDemo"
                 xmlns:dx="http://schemas.devexpress.com/winfx/2008/xaml/core"
                 DataContext="{dxmvvm:ViewModelSource Type={x:Type local:PainterWindowViewModel}}"
                 Title="Ribbon Window demo"
                 Height="300"
                 Width="608"
                 UseLayoutRounding="True">
    <Window.Resources>
        <local:PointToStringConverter x:Key="pointToStringConverter" FormatString="Column: {0} Row: {1}" />
        <sys:Double x:Key="editWidth">100</sys:Double>
    </Window.Resources>
    <dxmvvm:Interaction.Behaviors>
        <local:CloseWindowService />
    </dxmvvm:Interaction.Behaviors>
    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto" />
            <RowDefinition Height="*" />
            <RowDefinition Height="Auto" />
        </Grid.RowDefinitions>
        <dxr:RibbonControl x:Name="Ribbon"
                           AllowCustomization="False"
                           Grid.Row="0"
                           RibbonStyle="{Binding RibbonStyle, Mode=TwoWay}"
                           ToolbarShowMode="{Binding ToolbarShowMode, Mode=TwoWay}"
                           PageCategoryAlignment="{Binding PageCategoryAlignment, Mode=TwoWay}">
            <dxr:RibbonControl.ToolbarItems>
                <dxb:BarButtonItem Glyph="{dx:DXImage SvgImages/Outlook Inspired/Undo.svg}" Command="{Binding UndoCommand, ElementName=paintControl}" Content="Undo" />
                <dxb:BarButtonItem Glyph="{dx:DXImage SvgImages/Outlook Inspired/Redo.svg}" Command="{Binding RedoCommand, ElementName=paintControl}" Content="Redo" />
            </dxr:RibbonControl.ToolbarItems>
            <dxr:RibbonControl.ApplicationMenu>
                <dxr:ApplicationMenu>
                    <dxb:BarButtonItem x:Name="biClose"
                                       Content="Close window"
                                       LargeGlyph="{dx:DXImage SvgImages/Outlook Inspired/Close.svg}"
                                       Command="{Binding CloseWindowCommand}" />
                </dxr:ApplicationMenu>
            </dxr:RibbonControl.ApplicationMenu>
            <dxr:RibbonPage Caption="Home">
                <dxr:RibbonPageGroup Caption="Tools">
                    <dxb:BarEditItem Content="Brush Color"
                                     EditValue="{Binding BrushColor, ElementName=paintControl, Mode=TwoWay}"
                                     EditWidth="{Binding RelativeSource={RelativeSource Self}, Path=(dx:ThemeManager.TreeWalker), Converter={local:EditWidthConverter EditWidth=100}}">
                        <dxb:BarEditItem.EditSettings>
                            <dxe:PopupColorEditSettings />
                        </dxb:BarEditItem.EditSettings>
                    </dxb:BarEditItem>
                    <dxb:BarEditItem Content="Brush Size"
                                     EditValue="{Binding BrushSize, ElementName=paintControl, Mode=TwoWay}"
                                     EditWidth="{Binding RelativeSource={RelativeSource Self}, Path=(dx:ThemeManager.TreeWalker), Converter={local:EditWidthConverter EditWidth=100}}">
                        <dxb:BarEditItem.EditSettings>
                            <dxe:TrackBarEditSettings Minimum="{Binding MinBrushSize, ElementName=paintControl}"
                                                      Maximum="{Binding MaxBrushSize, ElementName=paintControl}" />
                        </dxb:BarEditItem.EditSettings>
                    </dxb:BarEditItem>
                    <dxb:BarEditItem Content="Brush Opacity"
                                     EditValue="{Binding BrushOpacity, ElementName=paintControl, Mode=TwoWay}"
                                     EditWidth="{Binding RelativeSource={RelativeSource Self}, Path=(dx:ThemeManager.TreeWalker), Converter={local:EditWidthConverter EditWidth=100}}">
                        <dxb:BarEditItem.EditSettings>
                            <dxe:TrackBarEditSettings Minimum="0" Maximum="1" SmallStep="0.01" />
                        </dxb:BarEditItem.EditSettings>
                    </dxb:BarEditItem>
                    <dxb:BarItemLinkSeparator />
                    <dxb:BarCheckItem Content="Brush Tool"
                                      Glyph="{dx:DXImage SvgImages/Icon Builder/Actions_Edit.svg}"
                                      IsChecked="{Binding IsBrushToolSelected, ElementName=paintControl}" />
                    <dxb:BarCheckItem Content="Type Tool"
                                      Glyph="{dx:DXImage SvgImages/Dashboards/EditNames.svg}"
                                      IsChecked="{Binding IsTextToolSelected, ElementName=paintControl}" />
                </dxr:RibbonPageGroup>
            </dxr:RibbonPage>
            <dxr:RibbonPageCategory Caption="Text Tools"
                                    Color="{Binding PageCategoryColor, Mode=OneWay}"
                                    IsVisible="{Binding IsTextEditing, ElementName=paintControl}">
                <dxr:RibbonPage Caption="Text">
                    <dxr:RibbonPageGroup Caption="Font">
                        <dxb:BarEditItem Content="Font Family:"
                                         EditWidth="{Binding RelativeSource={RelativeSource Self}, Path=(dx:ThemeManager.TreeWalker), Converter={local:EditWidthConverter EditWidth=100}}"
                                         ClosePopupOnChangingEditValue="True"
                                         Description="Changes the font family of the text."
                                         EditValueChanged="OnEditValueChanged"
                                         EditValue="{Binding TextFontFamily, ElementName=paintControl, Mode=TwoWay}">
                            <dxb:BarEditItem.EditSettings>
                                <dxe:FontEditSettings AutoComplete="True" ValidateOnTextInput="False" IsTextEditable="False" />
                            </dxb:BarEditItem.EditSettings>
                        </dxb:BarEditItem>
                        <dxb:BarEditItem Content="Font Size:"
                                         EditWidth="{Binding RelativeSource={RelativeSource Self}, Path=(dx:ThemeManager.TreeWalker), Converter={local:EditWidthConverter EditWidth=60}}"
                                         Description="Changes the font size of the text."
                                             EditValueChanged="OnEditValueChanged"
                                         EditValue="{Binding TextFontSize, ElementName=paintControl, Mode=TwoWay}">
                            <dxb:BarEditItem.EditSettings>
                                <dxe:ComboBoxEditSettings x:Name="fontSizeSettings" PopupMaxHeight="250" IsTextEditable="False" ItemsSource="{Binding FontSizes}" />
                            </dxb:BarEditItem.EditSettings>
                        </dxb:BarEditItem>
                        <dxb:BarEditItem Content="Font Color:"
                                         EditValue="{Binding TextFontColor, ElementName=paintControl, Mode=TwoWay}"
                                         Description="Changes the font color of the text."
                                         EditValueChanged="OnEditValueChanged"
                                         EditWidth="{StaticResource editWidth}">
                            <dxb:BarEditItem.EditSettings>
                                <dxe:PopupColorEditSettings />
                            </dxb:BarEditItem.EditSettings>
                        </dxb:BarEditItem>
                    </dxr:RibbonPageGroup>
                </dxr:RibbonPage>
            </dxr:RibbonPageCategory>
            <dxr:RibbonPageCategory Caption="Appearance" Color="{Binding PageCategoryColor, Mode=OneWay}">
                <dxr:RibbonPage Caption="Appearance">
                    <dxr:RibbonPageGroup Caption="View">
                        <dxb:BarEditItem Content="Page category alignment:"
                                         EditWidth="{Binding RelativeSource={RelativeSource Self}, Path=(dx:ThemeManager.TreeWalker), Converter={local:EditWidthConverter EditWidth=100}}"
                                         ClosePopupOnChangingEditValue="True"
                                         EditValue="{Binding PageCategoryAlignment, Mode=TwoWay}"
                                         RibbonStyle="SmallWithText">
                            <dxb:BarEditItem.EditSettings>
                                <dxe:ComboBoxEditSettings IsTextEditable="False" PopupMaxHeight="250">
                                    <dxe:ComboBoxEditSettings.Items>
                                        <dxr:RibbonPageCategoryCaptionAlignment>Right</dxr:RibbonPageCategoryCaptionAlignment>
                                        <dxr:RibbonPageCategoryCaptionAlignment>Left</dxr:RibbonPageCategoryCaptionAlignment>
                                    </dxe:ComboBoxEditSettings.Items>
                                </dxe:ComboBoxEditSettings>
                            </dxb:BarEditItem.EditSettings>
                        </dxb:BarEditItem>
                        <dxb:BarEditItem Content="Toolbar show mode:"
                                         EditWidth="{Binding RelativeSource={RelativeSource Self}, Path=(dx:ThemeManager.TreeWalker), Converter={local:EditWidthConverter EditWidth=100}}"
                                         ClosePopupOnChangingEditValue="True"
                                         EditValue="{Binding ToolbarShowMode, Mode=TwoWay}"
                                         RibbonStyle="SmallWithText">
                            <dxb:BarEditItem.EditSettings>
                                <dxe:ComboBoxEditSettings IsTextEditable="False" PopupMaxHeight="250">
                                    <dxe:ComboBoxEditSettings.Items>
                                        <dxr:RibbonQuickAccessToolbarShowMode>ShowAbove</dxr:RibbonQuickAccessToolbarShowMode>
                                        <dxr:RibbonQuickAccessToolbarShowMode>ShowBelow</dxr:RibbonQuickAccessToolbarShowMode>
                                        <dxr:RibbonQuickAccessToolbarShowMode>Hide</dxr:RibbonQuickAccessToolbarShowMode>
                                    </dxe:ComboBoxEditSettings.Items>
                                </dxe:ComboBoxEditSettings>
                            </dxb:BarEditItem.EditSettings>
                        </dxb:BarEditItem>
                        <dxb:BarSplitButtonItem Content="Category color" Hint="Specify the Contextual Category's accent color." ActAsDropDown="True" RibbonStyle="Large">
                            <dxb:BarSplitButtonItem.GlyphTemplate>
                                <DataTemplate>
                                    <Border Name="glyph" Width="16" Height="16" BorderBrush="Black" BorderThickness="1">
                                        <Border.Background>
                                            <SolidColorBrush Color="{Binding PageCategoryColor}" />
                                        </Border.Background>
                                    </Border>
                                    <DataTemplate.Triggers>
                                        <DataTrigger Binding="{Binding Path=CurrentRibbonStyle, RelativeSource={RelativeSource AncestorType={x:Type dxb:BarItemLinkControl}}}"
                                                     Value="Large">
                                            <Setter TargetName="glyph" Property="Width" Value="32" />
                                            <Setter TargetName="glyph" Property="Height" Value="32" />
                                        </DataTrigger>
                                    </DataTemplate.Triggers>
                                </DataTemplate>
                            </dxb:BarSplitButtonItem.GlyphTemplate>
                            <dxb:BarSplitButtonItem.PopupControl>
                                <dxb:PopupControlContainer>
                                    <dxe:ColorEdit Color="Black"
                                                   DefaultColor="Orange"
                                                   EditValue="{Binding PageCategoryColor, Mode=TwoWay}"
                                                   DefaultColorButtonContent="Automatic"
                                                   CloseOwnerPopupOnClick="True"
                                                   ShowBorder="False" />
                                </dxb:PopupControlContainer>
                            </dxb:BarSplitButtonItem.PopupControl>
                        </dxb:BarSplitButtonItem>
                    </dxr:RibbonPageGroup>
                    <dxr:RibbonPageGroup Caption="Themes">
                        <dxr:RibbonGalleryBarItem Content="Theme" Glyph="{dx:DXImage Image=Colors_16x16.png}">
                            <dxmvvm:Interaction.Behaviors>
                                <dxr:RibbonGalleryItemThemeSelectorBehavior />
                            </dxmvvm:Interaction.Behaviors>
                        </dxr:RibbonGalleryBarItem>
                    </dxr:RibbonPageGroup>
                </dxr:RibbonPage>
            </dxr:RibbonPageCategory>
        </dxr:RibbonControl>
        <local:PaintControl Grid.Row="1" x:Name="paintControl" />
        <dxr:RibbonStatusBarControl x:Name="statusBar" Grid.Row="2" IsSizeGripVisible="False">
            <dxr:RibbonStatusBarControl.LeftItems>
                <dxb:BarStaticItem Content="{Binding MousePosition, Converter={StaticResource pointToStringConverter}, ElementName=paintControl}" />
            </dxr:RibbonStatusBarControl.LeftItems>
        </dxr:RibbonStatusBarControl>
    </Grid>
</dx:ThemedWindow>