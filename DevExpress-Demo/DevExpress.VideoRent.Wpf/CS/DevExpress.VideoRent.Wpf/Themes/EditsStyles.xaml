<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:dxe="http://schemas.devexpress.com/winfx/2008/xaml/editors"
    xmlns:dxg="http://schemas.devexpress.com/winfx/2008/xaml/grid"
    xmlns:videorent="clr-namespace:DevExpress.VideoRent;assembly=DevExpress.VideoRent"
    xmlns:helpers="clr-namespace:DevExpress.VideoRent.Wpf.Helpers"
    xmlns:local="clr-namespace:DevExpress.VideoRent.Wpf">

    <local:DrawingImageToImageSourceConverter x:Key="DrawingImageToImageSourceConverter" />
    <helpers:StringFormatConverter x:Key="StringFormatConverter" />
    <Style x:Key="PictureImageEdit" TargetType="dxe:ImageEdit">
        <Setter Property="AllowDrop" Value="False"/>
        <Setter Property="MenuTemplate">
            <Setter.Value>
                <ControlTemplate>
                    <StackPanel Orientation="Horizontal">
                        <dxe:ImageEditCopyToolButton/>
                        <dxe:ImageEditCutToolButton/>
                        <dxe:ImageEditClearToolButton/>
                        <dxe:ImageEditToolSeparator />
                        <dxe:ImageEditLoadToolButton />
                        <dxe:ImageEditSaveToolButton />
                    </StackPanel>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="PopupPictureImageEdit" TargetType="dxe:PopupImageEdit">
        <Setter Property="AllowDrop" Value="False"/>
        <Setter Property="MenuTemplate">
            <Setter.Value>
                <ControlTemplate>
                    <StackPanel Orientation="Horizontal">
                        <dxe:ImageEditCopyToolButton/>
                        <dxe:ImageEditCutToolButton/>
                        <dxe:ImageEditClearToolButton/>
                        <dxe:ImageEditToolSeparator />
                        <dxe:ImageEditLoadToolButton />
                        <dxe:ImageEditSaveToolButton />
                        <dxe:ImageEditToolSeparator />
                        <dxe:PopupImageEditOKToolButton/>
                        <dxe:PopupImageEditCancelToolButton/>
                    </StackPanel>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="MultilineTextEdit" TargetType="dxe:TextEdit">
        <Setter Property="AcceptsReturn" Value="True" />
        <Setter Property="VerticalScrollBarVisibility" Value="Visible" />
        <Setter Property="TextWrapping" Value="Wrap" />
        <Setter Property="VerticalContentAlignment" Value="Top" />
    </Style>
    <Style x:Key="MultilineShortTextEdit" TargetType="dxe:TextEdit">
        <Setter Property="AcceptsReturn" Value="True" />
        <Setter Property="TextWrapping" Value="Wrap" />
        <Setter Property="VerticalContentAlignment" Value="Top" />
    </Style>
    <Style x:Key="ListComboBoxEdit" TargetType="dxe:ComboBoxEdit">
        <Setter Property="IsTextEditable" Value="False" />
        <Setter Property="SeparatorString" Value=", " />
        <Setter Property="StyleSettings">
            <Setter.Value>
                <dxe:CheckedComboBoxStyleSettings />
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="TimeButtonEdit" TargetType="dxe:ButtonEdit">
        <Setter Property="AllowDefaultButton" Value="False" />
        <Setter Property="MaskType" Value="DateTime" />
        <Setter Property="Mask" Value="HH:mm:ss" />
        <Setter Property="MaskUseAsDisplayFormat" Value="True" />
        <Setter Property="Buttons">
            <Setter.Value>
                <dxe:ButtonInfoCollection>
                    <dxe:SpinButtonInfo
                        helpers:CustomEventCommandHelper.SpinUpClick="{Binding Path=Parent.(helpers:CommandHelper.Command0), RelativeSource={RelativeSource Self}}"
                        helpers:CustomEventCommandHelper.SpinDownClick="{Binding Path=Parent.(helpers:CommandHelper.Command1), RelativeSource={RelativeSource Self}}" />
                </dxe:ButtonInfoCollection>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="ContentButtonEdit" TargetType="dxe:ButtonEdit">
        <Setter Property="AllowDefaultButton" Value="False" />
        <Setter Property="Buttons">
            <Setter.Value>
                <dxe:ButtonInfoCollection>
                    <dxe:ButtonInfo
                        Content="{Binding Path=Parent.(helpers:EditHelper.ButtonContent), RelativeSource={RelativeSource Self}}"
                        helpers:CustomEventCommandHelper.Click="{Binding Path=Parent.(helpers:CommandHelper.Command0), RelativeSource={RelativeSource Self}}" />
                </dxe:ButtonInfoCollection>
            </Setter.Value>
        </Setter>

    </Style>
    <Style x:Key="SelectComboBoxEdit" TargetType="dxe:ComboBoxEdit">
        <Setter Property="IsTextEditable" Value="False" />
    </Style>
    <Style x:Key="PriceSpinEdit" TargetType="dxe:SpinEdit">
        <Setter Property="Mask" Value="c" />
        <Setter Property="MaskUseAsDisplayFormat" Value="True" />
        <Setter Property="EditValue" Value="0" />
        <Setter Property="MinValue" Value="0" />
    </Style>
    <Style x:Key="CountSpinEdit" TargetType="dxe:SpinEdit">
        <Setter Property="Mask" Value="# ##0" />
        <Setter Property="MaskUseAsDisplayFormat" Value="True" />
        <Setter Property="EditValue" Value="1" />
        <Setter Property="MinValue" Value="1" />
    </Style>
    <Style x:Key="CustomLookUpEdit" TargetType="dxg:LookUpEdit">
        <Setter Property="AutoPopulateColumns" Value="False" />
        <Setter Property="IsPopupAutoWidth" Value="False" />
        <Setter Property="ShowSizeGrip" Value="True" />
        <Setter Property="IsTextEditable" Value="False" />
    </Style>
    <Style x:Key="MemoEdit" TargetType="dxe:MemoEdit">
        <Setter Property="PopupMaxWidth" Value="250" />
        <Setter Property="PopupMaxHeight" Value="400" />
        <Setter Property="MemoTextWrapping" Value="Wrap" />
        <Setter Property="MemoVerticalScrollBarVisibility" Value="Auto" />
    </Style>
    <Style x:Key="PhoneTextEdit" TargetType="dxe:TextEdit">
        <Setter Property="MaskUseAsDisplayFormat" Value="True" />
        <Setter Property="MaskType" Value="Simple" />
        <Setter Property="Mask" Value="(999)000-00-00" />
    </Style>
    <Style x:Key="PercentTextEdit" TargetType="dxe:TextEdit">
        <Setter Property="MaskUseAsDisplayFormat" Value="True" />
        <Setter Property="MaskType" Value="Numeric" />
        <Setter Property="Mask" Value="p" />
        <Setter Property="HorizontalContentAlignment" Value="Right" />
    </Style>
    <Style x:Key="ChartPaletteComboBoxEdit" TargetType="dxe:ListBoxEdit">
        <Setter Property="ValueMember" Value="Name" />
        <Setter Property="ItemTemplate">
            <Setter.Value>
                <DataTemplate>
                    <StackPanel Background="#00000000" Orientation="Horizontal" Margin="4,3,4,3">
                        <Grid VerticalAlignment="Center">
                            <StackPanel Orientation="Horizontal" Margin="1">
                                <Rectangle Height="14" Width="14" Margin="0,0,1,0" Stroke="#BF000000">
                                    <Rectangle.Fill>
                                        <SolidColorBrush Color="{Binding Path=Tag[0]}" />
                                    </Rectangle.Fill>
                                </Rectangle>
                                <Rectangle Height="14" Width="14" Margin="0,0,1,0" Stroke="#BF000000">
                                    <Rectangle.Fill>
                                        <SolidColorBrush Color="{Binding Path=Tag[1]}" />
                                    </Rectangle.Fill>
                                </Rectangle>
                                <Rectangle Height="14" Width="14" Margin="0,0,1,0" Stroke="#BF000000">
                                    <Rectangle.Fill>
                                        <SolidColorBrush Color="{Binding Path=Tag[2]}" />
                                    </Rectangle.Fill>
                                </Rectangle>
                                <Rectangle Height="14" Width="14" Margin="0,0,1,0" Stroke="#BF000000">
                                    <Rectangle.Fill>
                                        <SolidColorBrush Color="{Binding Path=Tag[3]}" />
                                    </Rectangle.Fill>
                                </Rectangle>
                                <Rectangle Height="14" Width="14" Margin="0,0,1,0" Stroke="#BF000000">
                                    <Rectangle.Fill>
                                        <SolidColorBrush Color="{Binding Path=Tag[4]}" />
                                    </Rectangle.Fill>
                                </Rectangle>
                                <Rectangle Height="14" Width="14" Margin="0,0,1,0" Stroke="#BF000000">
                                    <Rectangle.Fill>
                                        <SolidColorBrush Color="{Binding Path=Tag[5]}" />
                                    </Rectangle.Fill>
                                </Rectangle>
                                <Rectangle Height="14" Width="14" Margin="0,0,1,0" Stroke="#BF000000">
                                    <Rectangle.Fill>
                                        <SolidColorBrush Color="{Binding Path=Tag[6]}" />
                                    </Rectangle.Fill>
                                </Rectangle>
                                <Rectangle Height="14" Width="14" Margin="0,0,1,0" Stroke="#BF000000">
                                    <Rectangle.Fill>
                                        <SolidColorBrush Color="{Binding Path=Tag[7]}" />
                                    </Rectangle.Fill>
                                </Rectangle>
                                <Rectangle Height="14" Width="14" Margin="0,0,1,0" Stroke="#BF000000">
                                    <Rectangle.Fill>
                                        <SolidColorBrush Color="{Binding Path=Tag[8]}" />
                                    </Rectangle.Fill>
                                </Rectangle>
                                <Rectangle Height="14" Width="14" Margin="0,0,1,0" Stroke="#BF000000">
                                    <Rectangle.Fill>
                                        <SolidColorBrush Color="{Binding Path=Tag[9]}" />
                                    </Rectangle.Fill>
                                </Rectangle>
                                <Rectangle Height="14" Width="14" Margin="0,0,1,0" Stroke="#BF000000">
                                    <Rectangle.Fill>
                                        <SolidColorBrush Color="{Binding Path=Tag[10]}" />
                                    </Rectangle.Fill>
                                </Rectangle>
                                <Rectangle Height="14" Width="14" Margin="0" Stroke="#BF000000">
                                    <Rectangle.Fill>
                                        <SolidColorBrush Color="{Binding Path=Tag[11]}" />
                                    </Rectangle.Fill>
                                </Rectangle>
                            </StackPanel>
                        </Grid>
                        <TextBlock HorizontalAlignment="Center" Margin="3,0,0,0" Foreground="#FF353535" Text="{Binding Path=Name}" />
                    </StackPanel>
                </DataTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="ChartMarkerTrackBarEdit" TargetType="dxe:TrackBarEdit">
        <Setter Property="TickPlacement" Value="None" />
    </Style>
    <Style x:Key="ChartMarkerSizeTrackBarEdit" TargetType="dxe:TrackBarEdit" BasedOn="{StaticResource ChartMarkerTrackBarEdit}">
        <Setter Property="Minimum" Value="10" />
        <Setter Property="Maximum" Value="40" />
    </Style>
    <Style x:Key="ChartMarkerAngleTrackBarEdit" TargetType="dxe:TrackBarEdit" BasedOn="{StaticResource ChartMarkerTrackBarEdit}">
        <Setter Property="Minimum" Value="0.0" />
        <Setter Property="Maximum" Value="360.0" />
    </Style>
    <Style x:Key="ChartMarker2DKindComboBoxEdit" TargetType="dxe:ComboBoxEdit" BasedOn="{StaticResource SelectComboBoxEdit}">
        <Setter Property="ValueMember" Value="Name" />
        <Setter Property="DisplayMember" Value="Name" />
    </Style>
    <videorent:ReferenceImages x:Key="ReferenceImages"/>
    <local:EnumItemToItemIconConverter x:Key="RatingToRatingIconConverter" EnumType="{x:Type videorent:MovieRating}" ImagesPropertyName="Ratings"/>
    <local:EnumItemToItemIconConverter x:Key="GenderToGenderIconConverter" EnumType="{x:Type videorent:PersonGender}" ImagesPropertyName="PersonIcons"/>
    <Style x:Key="MoviePhotoImageEdit" TargetType="dxe:ImageEdit" BasedOn="{StaticResource PictureImageEdit}">
        <Setter Property="EmptyContentTemplate">
            <Setter.Value>
                <ControlTemplate>
                    <Image Source="{Binding Source={StaticResource ReferenceImages}, Path=UnknownMovie, Converter={StaticResource DrawingImageToImageSourceConverter}}"/>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="MoviePhotoPopupImageEdit" TargetType="dxe:PopupImageEdit" BasedOn="{StaticResource PopupPictureImageEdit}">
        <Setter Property="EmptyContentTemplate">
            <Setter.Value>
                <ControlTemplate>
                    <Image Source="{Binding Source={StaticResource ReferenceImages}, Path=UnknownMovie, Converter={StaticResource DrawingImageToImageSourceConverter}}"/>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="CustomerPhotoImageEdit" TargetType="dxe:ImageEdit" BasedOn="{StaticResource PictureImageEdit}">
        <Setter Property="EmptyContentTemplate">
            <Setter.Value>
                <ControlTemplate>
                    <Image Source="{Binding Source={StaticResource ReferenceImages}, Path=UnknownPerson, Converter={StaticResource DrawingImageToImageSourceConverter}}"/>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="CustomerPhotoPopupImageEdit" TargetType="dxe:PopupImageEdit" BasedOn="{StaticResource PopupPictureImageEdit}">
        <Setter Property="EmptyContentTemplate">
            <Setter.Value>
                <ControlTemplate>
                    <Image Source="{Binding Source={StaticResource ReferenceImages}, Path=UnknownPerson, Converter={StaticResource DrawingImageToImageSourceConverter}}"/>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="RatingComboBoxEdit" TargetType="dxe:ComboBoxEdit" BasedOn="{StaticResource SelectComboBoxEdit}">
        <Setter Property="ValueMember" Value="Rating" />
        <Setter Property="ItemTemplate">
            <Setter.Value>
                <DataTemplate>
                    <StackPanel Orientation="Horizontal">
                        <Image Source="{Binding LargeIcon}" Margin="5,0" />
                        <TextBlock Text="{Binding Rating}" />
                    </StackPanel>
                </DataTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="EditNonEditableTemplate">
            <Setter.Value>
                <ControlTemplate>
                    <Image Source="{Binding SelectedItem.Icon}" HorizontalAlignment="Center" Stretch="None" Margin="3" />
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="HorizontalContentAlignment" Value="Stretch" />
    </Style>
    <Style TargetType="dxe:ComboBoxEdit" x:Key="CustomerDiscountLevelComboBoxEdit" BasedOn="{StaticResource SelectComboBoxEdit}">
        <Setter Property="ValueMember" Value="Value" />
        <Setter Property="ItemTemplate">
            <Setter.Value>
                <DataTemplate>
                    <TextBlock Text="{Binding Title, Converter={StaticResource StringFormatConverter}, ConverterParameter={helpers:ConstString ID=RenterDiscount}}" />
                </DataTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="EditNonEditableTemplate">
            <Setter.Value>
                <ControlTemplate>
                    <TextBlock Margin="3"
                        Text="{Binding SelectedItem.Title, Converter={StaticResource StringFormatConverter}, ConverterParameter={helpers:ConstString ID=RenterDiscount}}" />
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style TargetType="dxe:ComboBoxEdit" x:Key="ReceiptTypeComboBoxEdit" BasedOn="{StaticResource SelectComboBoxEdit}">
        <Setter Property="ValueMember" Value="Value" />
        <Setter Property="ItemTemplate">
            <Setter.Value>
                <DataTemplate>
                    <StackPanel Orientation="Horizontal">
                        <Image Source="{Binding Icon}" Margin="5,0" Stretch="None" VerticalAlignment="Center" />
                        <TextBlock Text="{Binding Name}" VerticalAlignment="Center"/>
                    </StackPanel>
                </DataTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="EditNonEditableTemplate">
            <Setter.Value>
                <ControlTemplate>
                    <StackPanel Margin="3" Orientation="Horizontal">
                        <Image Source="{Binding SelectedItem.Icon}" Margin="5,0" Stretch="None" VerticalAlignment="Center" />
                        <TextBlock Text="{Binding SelectedItem.Name}" VerticalAlignment="Center"/>
                    </StackPanel>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="CountriesComboBoxEdit" TargetType="dxe:ComboBoxEdit" BasedOn="{StaticResource ListComboBoxEdit}">
        <Setter Property="DisplayMember" Value="Name" />
    </Style>
    <Style x:Key="LanguageComboBoxEdit" TargetType="dxe:ComboBoxEdit" BasedOn="{StaticResource SelectComboBoxEdit}">
        <Setter Property="DisplayMember" Value="Name" />
    </Style>
    <Style x:Key="CategoryComboBoxEdit" TargetType="dxe:ComboBoxEdit" BasedOn="{StaticResource SelectComboBoxEdit}">
        <Setter Property="DisplayMember" Value="Name" />
        <Setter Property="ValueMember" Value="This" />
    </Style>
    <Style x:Key="IconAndValueComboBoxEdit" TargetType="dxe:ComboBoxEdit" BasedOn="{StaticResource SelectComboBoxEdit}">
        <Setter Property="ValueMember" Value="Value" />
        <Setter Property="ItemTemplate">
            <Setter.Value>
                <DataTemplate>
                    <StackPanel Orientation="Horizontal">
                        <Image Source="{Binding Icon}" Margin="5,2" RenderOptions.BitmapScalingMode="NearestNeighbor"/>
                        <TextBlock Text="{Binding Value}" Margin="0,2" />
                    </StackPanel>
                </DataTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="EditNonEditableTemplate">
            <Setter.Value>
                <ControlTemplate>
                    <StackPanel Orientation="Horizontal">
                        <Image Source="{Binding SelectedItem.Icon}" Margin="5,2" RenderOptions.BitmapScalingMode="NearestNeighbor"/>
                        <TextBlock Text="{Binding SelectedItem.Value}" Margin="0,2" />
                    </StackPanel>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="OnlyIconComboBoxEdit" TargetType="dxe:ComboBoxEdit" BasedOn="{StaticResource SelectComboBoxEdit}">
        <Setter Property="ValueMember" Value="Value" />
        <Setter Property="ItemTemplate">
            <Setter.Value>
                <DataTemplate>
                    <Image Stretch="None" Source="{Binding Icon}" Margin="5,2,5,2" RenderOptions.BitmapScalingMode="NearestNeighbor"/>
                </DataTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="EditNonEditableTemplate">
            <Setter.Value>
                <ControlTemplate>
                    <Image Stretch="None" Source="{Binding SelectedItem.Icon}" Margin="5,2,5,2" RenderOptions.BitmapScalingMode="NearestNeighbor"/>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="MovieLookUpEdit" TargetType="dxg:LookUpEdit" BasedOn="{StaticResource CustomLookUpEdit}">
        <Setter Property="PopupContentTemplate">
            <Setter.Value>
                <ControlTemplate>
                    <dxg:GridControl x:Name="PART_GridControl" MaxHeight="500">
                        <dxg:GridControl.View>
                            <dxg:TableView ShowAutoFilterRow="True" ShowGroupedColumns="True" AutoWidth="False" />
                        </dxg:GridControl.View>
                        <dxg:GridControl.Columns>
                            <dxg:GridColumn FieldName="Title" Header="{helpers:ConstString ID=Title}" Width="205" />
                            <dxg:GridColumn FieldName="ReleaseDate" Header="{helpers:ConstString ID=RealeaseDate}" Width="100" />
                            <dxg:GridColumn FieldName="Rating" Header="{helpers:ConstString ID=Rating}" Width="60" ReadOnly="True">
                                <dxg:GridColumn.CellTemplate>
                                    <DataTemplate>
                                        <Image Stretch="None" Source="{Binding Data.Rating, Converter={StaticResource RatingToRatingIconConverter}}" />
                                    </DataTemplate>
                                </dxg:GridColumn.CellTemplate>
                            </dxg:GridColumn>
                        </dxg:GridControl.Columns>
                    </dxg:GridControl>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="ArtistLookUpEdit" TargetType="dxg:LookUpEdit" BasedOn="{StaticResource CustomLookUpEdit}">
        <Setter Property="PopupContentTemplate">
            <Setter.Value>
                <ControlTemplate>
                    <dxg:GridControl x:Name="PART_GridControl" MaxHeight="500">
                        <dxg:GridControl.View>
                            <dxg:TableView ShowAutoFilterRow="True" ShowGroupedColumns="True" AutoWidth="False" />
                        </dxg:GridControl.View>
                        <dxg:GridControl.Columns>
                            <dxg:GridColumn FieldName="Gender" Header="{helpers:ConstString ID=Gender}" Width="63" ReadOnly="True">
                                <dxg:GridColumn.CellTemplate>
                                    <DataTemplate>
                                        <Image Stretch="None" Source="{Binding Data.Gender,Converter={StaticResource GenderToGenderIconConverter}}" />
                                    </DataTemplate>
                                </dxg:GridColumn.CellTemplate>
                            </dxg:GridColumn>
                            <dxg:GridColumn FieldName="FullName" Header="{helpers:ConstString ID=Name}" Width="180" />
                            <dxg:GridColumn FieldName="BirthDate" Header="{helpers:ConstString ID=BirthDate}" Width="75" />
                        </dxg:GridControl.Columns>
                    </dxg:GridControl>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="CompanyLookUpEdit" TargetType="dxg:LookUpEdit" BasedOn="{StaticResource CustomLookUpEdit}">
        <Setter Property="PopupContentTemplate">
            <Setter.Value>
                <ControlTemplate>
                    <dxg:GridControl x:Name="PART_GridControl" MaxHeight="500">
                        <dxg:GridControl.View>
                            <dxg:TableView ShowAutoFilterRow="True" ShowGroupedColumns="True" AutoWidth="False" />
                        </dxg:GridControl.View>
                        <dxg:GridControl.Columns>
                            <dxg:GridColumn FieldName="Name" Header="{helpers:ConstString ID=Company}" Width="212" />
                            <dxg:GridColumn FieldName="TypeName" Header="{helpers:ConstString ID=Type}" Width="102" />
                        </dxg:GridControl.Columns>
                    </dxg:GridControl>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="CardNumberTextEdit" TargetType="dxe:TextEdit">
        <Setter Property="Mask" Value="000000" />
        <Setter Property="MaskUseAsDisplayFormat" Value="True" />
        <Setter Property="MaskType" Value="Numeric" />
    </Style>
    <Style x:Key="EmailButtonEdit" TargetType="dxe:ButtonEdit" BasedOn="{StaticResource ContentButtonEdit}">
        <Setter Property="helpers:EditHelper.ButtonContent" Value="{helpers:ConstString ID=SendEmail}" />
    </Style>
    <Style x:Key="RentsPeriodEdit" TargetType="dxe:ComboBoxEdit"  BasedOn="{StaticResource SelectComboBoxEdit}">
        <Setter Property="ValueMember" Value="Period" />
        <Setter Property="DisplayMember" Value="PeriodName" />
    </Style>
</ResourceDictionary>